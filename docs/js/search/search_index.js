var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.7","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.702,1,1.702]],["body/modules/AppModule.html",[0,2.063,1,3.472,2,1.809,3,2.063,4,1.417,5,3.564,6,3.564,7,3.564,8,2.381,9,2.806,10,2.806,11,2.806,12,2.806,13,1.456,14,0.047,15,1.456,16,1.456,17,1.456,18,1.456,19,1.456,20,2.656,21,1.169,22,1.694,23,3.564,24,2.381,25,2.063,26,0.674,27,0.674,28,0.583,29,3.452,30,2.806,31,1.021,32,3.452,33,3.564,34,2.381,35,3.452,36,3.452,37,3.452,38,2.381,39,2.381,40,2.381,41,2.806,42,3.452,43,0.583,44,3.452,45,2.806,46,1.417,47,1.259,48,3.452,49,3.452,50,1.598,51,3.452,52,1.598,53,3.452,54,0.674,55,0.674,56,0.028,57,0.035,58,0.028]],["title/modules/AppRoutingModule.html",[0,1.702,20,1.493]],["body/modules/AppRoutingModule.html",[2,1.917,8,2.523,13,1.306,14,0.047,16,1.306,17,1.306,18,1.306,19,1.306,20,2.383,26,0.714,27,0.714,28,0.618,30,2.974,31,1.085,41,3.696,43,0.618,54,0.714,55,0.714,56,0.029,57,0.037,58,0.029,59,3.658,60,3.658,61,2.957,62,4.547,63,2.974,64,4.547,65,3.658,66,3.658,67,1.693,68,2.523,69,3.658,70,3.658,71,1.866,72,2.523,73,3.658,74,2.523,75,3.658,76,1.502,77,5.502,78,3.658,79,4.547,80,3.658,81,3.658,82,3.658,83,1.212,84,2.974,85,1.693,86,3.658,87,3.658,88,3.658]],["title/components/CounterComponent.html",[13,0.818,83,0.636]],["body/components/CounterComponent.html",[4,0.884,13,1.192,14,0.048,15,0.618,16,0.618,17,0.618,18,0.618,19,0.618,21,0.84,22,1.027,24,2.186,26,0.42,27,0.42,28,0.364,31,0.734,43,0.364,46,1.301,47,1.687,54,0.42,55,0.42,56,0.017,57,0.026,58,0.017,67,0.997,71,1.301,83,0.84,84,4.616,85,0.997,89,1.467,90,1.128,91,1.128,92,1.128,93,1.128,94,1.75,95,0.547,96,1.894,97,3.17,98,2.186,99,1.189,100,1.374,101,3.17,102,3.17,103,1.467,104,1.741,105,0.997,106,1.439,107,2.507,108,1.661,109,3.762,110,1.661,111,3.17,112,0.618,113,1.301,114,3.17,115,3.762,116,1.661,117,4.15,118,4.15,119,4.15,120,4.15,121,4.15,122,2.572,123,2.153,124,3.17,125,2.643,126,1.816,127,2.358,128,2.153,129,3.17,130,2.153,131,3.058,132,2.153,133,2.577,134,1.301,135,2.153,136,1.661,137,1.027,138,3.17,139,1.081,140,2.994,141,2.153,142,1.467,143,0.997,144,0.697,145,3.17,146,3.058,147,1.661,148,3.17,149,3.17,150,1.661,151,2.153,152,1.972,153,2.577,154,2.153,155,1.513,156,2.577,157,2.577,158,0.884,159,1.128,160,0.884,161,1.75,162,2.153,163,0.805,164,1.128,165,1.156,166,1.75,167,0.997,168,2.153,169,2.153,170,2.153,171,1.75,172,1.544,173,2.577,174,1.661,175,2.577,176,2.577,177,1.661,178,3.99,179,2.186,180,5.279,181,5.01,182,1.75,183,1.128,184,2.153,185,2.153,186,2.153,187,4.15,188,2.153,189,3.17,190,1.894,191,3.17,192,3.17,193,3.17,194,4.626,195,1.661,196,1.661,197,0.697,198,2.175,199,1.128,200,1.219,201,1.128,202,1.128,203,1.128,204,1.128,205,0.997,206,0.997,207,1.128]],["title/injectables/IobrokerService.html",[21,0.636,208,0.923]],["body/injectables/IobrokerService.html",[14,0.048,21,0.515,26,0.278,27,0.278,28,0.241,31,0.803,38,0.983,39,3.052,40,0.983,43,0.241,47,1.727,52,1.342,54,0.45,55,0.278,56,0.011,57,0.019,58,0.011,76,1.759,95,0.736,99,1.212,100,1.335,112,0.409,113,0.946,116,1.208,122,2.647,126,2.234,127,1.067,133,1.873,134,1.367,137,1.534,139,1.182,143,1.692,144,1.534,155,1.873,163,0.362,164,0.747,165,1.858,172,1.367,200,1.184,208,0.746,209,0.852,210,0.983,211,2.304,212,2.778,213,2.304,214,2.304,215,3.18,216,3.598,217,2.357,218,2.9,219,2.9,220,2.357,221,2.852,222,2.707,223,2.707,224,3.331,225,3.331,226,2.707,227,3.331,228,2.304,229,3.331,230,2.707,231,2.304,232,1.426,233,2.304,234,2.304,235,2.304,236,2.304,237,2.9,238,2.9,239,2.9,240,2.9,241,3.911,242,3.911,243,3.911,244,3.911,245,2.9,246,2.9,247,2.9,248,2,249,2,250,1.426,251,3.331,252,4.738,253,1.426,254,1.99,255,0.983,256,1.426,257,2.464,258,2.124,259,1.426,260,1.426,261,2.697,262,2.707,263,1.426,264,1.746,265,2.304,266,1.426,267,1.811,268,1.377,269,3.331,270,1.746,271,1.426,272,1.606,273,1.746,274,1.426,275,2.304,276,1.426,277,1.873,278,2.304,279,1.426,280,2.304,281,1.52,282,4.285,283,1.208,284,1.426,285,2.9,286,1.426,287,1.873,288,2,289,2,290,3.331,291,1.426,292,1.426,293,1.067,294,1.426,295,1.873,296,0.66,297,0.747,298,1.426,299,1.426,300,1.159,301,1.589,302,1.159,303,2,304,1.159,305,1.426,306,1.426,307,1.426,308,1.159,309,0.852,310,1.159,311,1.159,312,0.585,313,1.159,314,1.159,315,1.159,316,1.159,317,1.159,318,1.159,319,1.159,320,1.159,321,0.747,322,0.747,323,1.542,324,0.585,325,1.426,326,1.426,327,1.426,328,1.426,329,2.304,330,1.426,331,1.426,332,1.426,333,1.426,334,1.426,335,1.426,336,1.426,337,2.972,338,1.426,339,3.483,340,1.426,341,1.426,342,2.304,343,1.426,344,1.426,345,4.546,346,3.656,347,3.656,348,2.972,349,1.426,350,1.426,351,1.426,352,1.426,353,1.159,354,1.426,355,1.159,356,1.426,357,1.426,358,1.426,359,1.426,360,3.331,361,3.331,362,1.426,363,3.331,364,3.331,365,1.426,366,1.426,367,1.426,368,1.159,369,0.462,370,1.426]],["title/interfaces/Iselection.html",[371,1.319,372,1.493]],["body/interfaces/Iselection.html",[14,0.048,21,0.751,22,0.579,26,0.349,27,0.349,28,0.302,31,0.796,43,0.302,46,1.769,47,1.691,52,0.827,54,0.796,55,0.349,56,0.014,57,0.022,58,0.014,76,1.551,95,0.454,99,1.186,100,1.591,106,0.513,112,0.513,113,1.131,126,1.675,134,1.675,136,1.98,137,1.223,139,1.238,142,1.889,144,0.892,147,2.494,150,0.937,152,2.783,155,1.638,158,0.734,159,2.354,160,1.675,163,0.454,165,1.691,172,1.38,174,1.762,177,2.138,183,0.937,190,1.068,200,1.502,208,0.892,221,0.937,257,2.079,258,1.769,264,2.259,267,2.079,268,2.009,270,0.937,272,1.904,273,2.431,281,0.937,283,0.937,293,1.275,296,2.441,297,0.937,312,1.38,321,0.937,322,0.937,323,2.079,324,0.734,369,1.646,371,1.275,372,2.494,373,1.233,374,0.937,375,0.937,376,1.9,377,1.9,378,1.9,379,1.9,380,1.9,381,2.138,382,1.9,383,1.9,384,2.973,385,3.282,386,3.198,387,1.9,388,2.318,389,1.233,390,1.233,391,1.9,392,1.233,393,1.233,394,1.233,395,1.233,396,1.9,397,1.068,398,1.068,399,1.444,400,0.937,401,1.068,402,1.9,403,1.9,404,1.233,405,1.9,406,1.9,407,2.605,408,1.233,409,1.9,410,1.233,411,1.233,412,1.233,413,1.233,414,1.233,415,1.233,416,0.937,417,1.444,418,2.431,419,2.009,420,2.318,421,2.318,422,1.068,423,1.9,424,1.068,425,1.068,426,1.233,427,1.233,428,1.068,429,1.233,430,0.937,431,1.646,432,1.068,433,1.233,434,1.233,435,1.233,436,1.068,437,1.233,438,1.233,439,1.233,440,1.646,441,2.605,442,1.233,443,1.233,444,2.318,445,2.318,446,1.233,447,2.318,448,1.646,449,1.9,450,1.233,451,1.233,452,1.233,453,1.233,454,1.9,455,1.233,456,1.233,457,1.233,458,1.233,459,1.233,460,1.068,461,1.233,462,1.233,463,1.233,464,1.233,465,1.233,466,1.233,467,1.233,468,1.233,469,1.9,470,1.233,471,1.233,472,1.9,473,1.233,474,1.233,475,1.233,476,1.233,477,1.233,478,1.233,479,1.233,480,2.605,481,1.233,482,1.233,483,1.233,484,1.233,485,1.233,486,1.233,487,1.233,488,1.233,489,1.233,490,1.233]],["title/interfaces/IstateObjectContainer.html",[160,1.169,371,1.319]],["body/interfaces/IstateObjectContainer.html",[14,0.048,21,0.748,22,0.575,26,0.347,27,0.347,28,0.3,31,0.794,43,0.3,46,1.545,47,1.688,52,0.822,54,0.794,55,0.347,56,0.014,57,0.022,58,0.014,76,1.545,95,0.451,99,1.216,100,1.609,106,0.51,112,0.51,113,1.126,126,1.67,134,1.765,136,2.132,137,1.318,139,1.235,142,1.55,144,0.888,147,2.627,150,0.931,152,2.74,155,1.634,158,0.729,159,2.132,160,1.765,163,0.451,165,1.688,172,1.375,174,2.349,177,2.489,183,0.931,190,1.062,200,1.318,208,0.888,221,0.931,257,2.075,258,1.765,264,2.253,267,2.075,268,2.001,270,0.931,272,2.084,273,2.426,281,0.931,283,0.931,293,1.269,296,2.42,297,0.931,312,1.375,321,0.931,322,0.931,323,2.075,324,0.729,369,1.644,371,1.269,372,2.426,373,1.225,374,0.931,375,0.931,376,1.225,377,1.225,378,1.225,379,1.225,380,1.225,381,1.755,382,1.225,383,1.225,384,2.309,385,2.965,386,2.806,387,1.225,388,2.309,389,1.891,390,1.891,391,2.309,392,1.891,393,1.891,394,1.891,395,1.891,396,2.597,397,1.062,398,1.062,399,1.437,400,0.931,401,1.062,402,1.891,403,1.891,404,1.225,405,1.891,406,1.891,407,2.597,408,1.225,409,1.891,410,1.225,411,1.225,412,1.225,413,1.225,414,1.225,415,1.225,416,0.931,417,1.437,418,2.426,419,2.001,420,2.309,421,2.309,422,1.062,423,1.891,424,1.062,425,1.062,426,1.225,427,1.225,428,1.062,429,1.225,430,0.931,431,1.639,432,1.062,433,1.225,434,1.225,435,1.225,436,1.062,437,1.225,438,1.225,439,1.225,440,1.639,441,2.597,442,1.225,443,1.225,444,2.309,445,2.309,446,1.225,447,2.309,448,1.639,449,1.891,450,1.225,451,1.225,452,1.225,453,1.225,454,1.891,455,1.225,456,1.225,457,1.225,458,1.225,459,1.225,460,1.062,461,1.225,462,1.225,463,1.225,464,1.225,465,1.225,466,1.225,467,1.225,468,1.225,469,1.891,470,1.225,471,1.225,472,1.891,473,1.225,474,1.225,475,1.225,476,1.225,477,1.225,478,1.225,479,1.225,480,2.597,481,1.225,482,1.225,483,1.225,484,1.225,485,1.225,486,1.225,487,1.225,488,1.225,489,1.225,490,1.225]],["title/directives/LoadScriptDirectiveDirective.html",[15,0.818,197,0.923]],["body/directives/LoadScriptDirectiveDirective.html",[14,0.047,15,1.356,26,0.759,27,0.759,28,0.657,31,0.759,43,0.657,54,0.759,55,0.759,56,0.031,57,0.038,58,0.031,95,0.988,103,2.186,104,2.354,105,1.801,106,1.356,150,2.039,157,3.163,163,1.291,164,2.039,167,1.801,197,1.529,205,1.801,206,2.186,323,1.801,430,2.475,491,3.163,492,3.163,493,3.163,494,4.722,495,4.722,496,3.257,497,3.891,498,3.163,499,3.891,500,3.891,501,3.891,502,3.891,503,3.891,504,3.891,505,3.891,506,3.891,507,3.891,508,3.891]],["title/components/MainSiteComponent.html",[16,0.818,83,0.636]],["body/components/MainSiteComponent.html",[4,1.188,13,0.831,14,0.048,15,0.831,16,1.359,17,0.831,18,0.831,19,0.831,21,0.987,26,0.565,27,0.565,28,0.489,31,0.863,43,0.489,50,2.046,54,0.565,55,0.565,56,0.023,57,0.031,58,0.023,67,2.451,68,1.995,71,1.603,83,0.987,85,1.339,89,1.808,90,1.516,91,1.516,92,1.516,93,1.516,95,0.735,99,0.872,100,1.27,103,1.808,104,2.046,105,1.339,106,1.521,107,2.728,108,2.047,110,2.047,127,2.046,137,1.533,158,1.188,163,1.377,165,1.055,167,1.339,195,2.047,196,2.047,197,0.937,198,2.48,199,1.516,200,1.432,201,1.516,202,1.516,203,1.516,204,1.516,205,1.339,206,1.339,207,1.516,215,3.594,216,2.352,217,3.175,220,3.594,226,2.352,230,2.352,261,1.995,324,1.188,339,2.352,353,2.352,355,2.352,368,2.352,369,1.533,400,1.516,416,1.516,417,1.516,418,1.516,460,1.729,509,2.352,510,2.352,511,3.175,512,4.421,513,2.693,514,4.421,515,3.905,516,2.352,517,4.421,518,3.905,519,2.893,520,2.893,521,2.893,522,2.893,523,2.893,524,2.893,525,2.893,526,2.893,527,2.893,528,2.893,529,2.893,530,2.893,531,2.893,532,2.893,533,2.893,534,3.175,535,3.175,536,2.352,537,2.893,538,2.893,539,2.893,540,2.893,541,2.893,542,2.893]],["title/injectables/SelectorServiceService.html",[22,0.923,208,0.923]],["body/injectables/SelectorServiceService.html",[14,0.048,21,0.668,22,0.775,26,0.291,27,0.291,28,0.252,31,0.731,43,0.252,46,1.404,47,1.589,52,1.107,54,0.731,55,0.291,56,0.012,57,0.019,58,0.012,76,1.404,95,0.95,99,1.206,100,1.591,106,0.429,112,0.429,113,0.982,116,1.253,122,2.417,126,2.028,127,1.583,134,1.536,136,1.962,137,1.294,139,1.325,142,1.733,143,1.583,144,1.294,147,2.554,150,1.253,152,2.808,155,1.718,158,0.613,159,2.093,160,1.536,163,0.379,165,1.962,172,1.228,174,1.568,177,1.962,183,0.782,190,1.429,200,1.526,208,0.775,209,0.892,221,1.568,248,2.359,249,2.359,257,1.849,258,1.404,264,2.356,267,2.181,268,2.237,270,0.782,272,1.893,273,2.647,281,0.782,283,0.782,293,1.107,296,2.491,297,0.782,312,1.228,321,0.782,322,0.782,323,1.942,324,0.613,369,1.678,371,1.107,372,2.469,374,2.469,375,0.782,376,1.03,377,1.03,378,1.03,379,1.03,380,1.03,381,1.793,382,1.03,383,1.03,384,2.063,385,3.006,386,2.893,387,1.03,388,1.649,389,1.03,390,1.03,391,2.063,392,1.03,393,1.03,394,1.03,395,1.03,396,1.649,397,0.892,398,0.892,399,1.568,400,0.782,401,1.429,402,2.359,403,2.359,404,1.649,405,2.581,406,2.359,407,3.006,408,1.649,409,2.581,410,1.03,411,2.063,412,1.03,413,1.03,414,1.649,415,2.359,416,0.782,417,1.253,418,2.417,419,1.788,420,2.063,421,2.063,422,0.892,423,1.649,424,0.892,425,0.892,426,1.649,427,1.649,428,1.788,429,2.359,430,0.782,431,1.429,432,0.892,433,1.03,434,1.03,435,1.03,436,0.892,437,1.03,438,1.03,439,1.03,440,1.788,441,3.006,442,1.649,443,1.03,444,2.063,445,2.063,446,1.03,447,2.063,448,1.429,449,1.649,450,1.03,451,1.03,452,1.03,453,1.03,454,2.063,455,1.649,456,1.03,457,1.03,458,1.03,459,1.649,460,1.429,461,1.649,462,1.03,463,1.03,464,1.03,465,1.03,466,1.03,467,1.03,468,1.03,469,1.649,470,1.03,471,1.03,472,2.359,473,1.649,474,1.649,475,1.649,476,1.649,477,1.03,478,1.03,479,1.03,480,2.359,481,1.03,482,1.03,483,1.03,484,1.03,485,1.03,486,1.03,487,1.03,488,1.03,489,1.03,490,1.03,543,1.944,544,2.392,545,2.392,546,2.392,547,2.392,548,1.493,549,1.493,550,1.493,551,1.493,552,1.493,553,1.493,554,1.493,555,1.493,556,1.493,557,1.493]],["title/components/ShowLightsComponent.html",[17,0.818,83,0.636]],["body/components/ShowLightsComponent.html",[4,0.748,13,0.523,14,0.048,15,0.523,16,0.523,17,1.096,18,0.523,19,0.523,21,0.76,22,0.905,26,0.355,27,0.355,28,0.308,31,0.803,43,0.308,46,1.147,47,1.391,54,0.355,55,0.355,56,0.015,57,0.023,58,0.015,67,0.843,71,1.964,74,3.118,76,1.147,83,1.01,85,0.843,89,1.294,90,1.783,91,0.955,92,0.955,93,0.955,95,0.864,96,2.28,99,1.091,100,1.482,103,1.294,104,1.574,105,0.843,106,1.427,107,2.37,108,1.465,110,1.465,112,0.803,113,1.147,116,1.465,122,2.276,125,2.459,126,1.566,127,1.905,131,2.272,137,1.236,139,1.182,140,1.67,142,1.574,143,1.766,144,1.582,146,1.481,147,2.276,152,0.955,153,3.101,155,1.584,158,0.748,160,1.396,161,1.481,163,0.71,164,0.955,165,1.5,166,1.481,167,0.843,171,1.481,172,1.396,173,2.272,174,2.642,175,2.272,176,2.272,177,2.56,178,3.101,179,1.928,182,1.481,183,0.955,195,1.465,196,1.465,197,0.59,198,1.999,199,0.955,200,1.465,201,0.955,202,0.955,203,0.955,204,0.955,205,0.843,206,0.843,207,0.955,248,1.928,249,1.928,254,2.28,255,1.928,257,1.294,272,2.069,273,1.465,277,2.272,323,1.905,369,1.333,399,1.465,400,1.783,401,1.67,513,1.928,558,3.118,559,1.481,560,1.928,561,3.793,562,3.815,563,3.101,564,3.401,565,2.795,566,3.401,567,3.815,568,3.401,569,3.815,570,2.795,571,2.795,572,1.821,573,2.795,574,2.795,575,1.821,576,1.821,577,3.815,578,2.795,579,1.821,580,1.821,581,3.815,582,2.795,583,2.795,584,2.795,585,2.795,586,2.272,587,2.795,588,2.795,589,2.795,590,2.795,591,2.795,592,1.821,593,2.272,594,2.272,595,1.481,596,1.821,597,4.343,598,2.795,599,2.795,600,2.795,601,2.795,602,2.795,603,2.795,604,1.821,605,2.795,606,2.795,607,2.795,608,2.795,609,2.795,610,1.481,611,1.256,612,1.821,613,1.821,614,1.821,615,1.821,616,1.821,617,1.821,618,1.821,619,2.795,620,2.795,621,1.821,622,1.821,623,1.821,624,1.821,625,1.821,626,1.821,627,1.821,628,1.821,629,1.821,630,1.821,631,2.795,632,3.401,633,3.401,634,3.401,635,1.821,636,1.821,637,1.821,638,1.821,639,1.821,640,1.821,641,1.821,642,1.821,643,2.272,644,2.272,645,2.795,646,2.795,647,3.101,648,2.272,649,1.928,650,2.272,651,2.272,652,2.272]],["title/components/ShowRoomsComponent.html",[18,0.818,83,0.636]],["body/components/ShowRoomsComponent.html",[4,1.041,13,0.729,14,0.047,15,0.729,16,0.729,17,0.729,18,1.286,19,0.729,26,0.495,27,0.495,28,0.429,31,0.805,43,0.429,50,1.91,54,0.495,55,0.495,56,0.02,57,0.029,58,0.02,67,1.174,71,2.14,72,3.087,83,0.922,85,1.174,89,1.651,90,1.33,91,1.33,92,1.33,93,1.33,95,0.644,96,2.466,99,0.797,100,1.355,103,1.651,104,1.91,105,1.174,106,1.473,107,2.633,108,1.87,110,1.87,112,0.729,113,1.464,116,1.87,122,2.162,125,2.675,126,1.041,127,1.174,134,1.464,137,0.822,139,1.025,140,2.132,143,2.072,144,1.155,163,0.644,167,2.072,179,1.75,195,1.87,196,1.87,197,0.822,198,2.346,199,1.33,200,1.661,201,1.33,202,1.33,203,1.33,204,1.33,205,1.174,206,1.174,207,1.33,254,2.818,272,1.041,312,1.694,324,1.041,369,1.336,381,1.33,511,2.9,513,2.46,516,2.063,558,3.087,560,1.75,563,2.9,593,2.9,594,2.9,595,2.063,610,2.063,611,1.75,643,2.9,647,3.639,648,2.9,649,2.46,650,2.9,651,2.9,652,2.9,653,2.063,654,4.476,655,4.126,656,3.567,657,4.126,658,4.126,659,2.537,660,3.567,661,3.567,662,2.537,663,2.537,664,4.126,665,3.567,666,4.126,667,5.025,668,4.126,669,2.537,670,2.537,671,2.537,672,2.537,673,3.567,674,3.567,675,2.537,676,3.567,677,3.567,678,3.567,679,3.567,680,3.567,681,3.567,682,3.567,683,3.567,684,3.567,685,3.567,686,2.063,687,3.354,688,2.063,689,2.063,690,2.063,691,2.063,692,2.063,693,2.063,694,2.063,695,2.063,696,2.063,697,2.9,698,2.9,699,2.537,700,2.537,701,2.537,702,2.537,703,2.063,704,2.063]],["title/injectables/StateStoreService.html",[50,1.319,208,0.923]],["body/injectables/StateStoreService.html",[14,0.048,21,0.927,26,0.501,27,0.501,28,0.434,31,0.924,43,0.434,47,1.514,50,1.665,54,0.501,55,0.501,56,0.021,57,0.029,58,0.021,76,2.275,95,0.652,99,1.005,100,1.41,134,1.476,136,1.885,137,1.345,144,1.345,155,1.876,156,2.923,158,1.053,163,1.345,165,1.79,172,1.476,208,1.165,209,1.534,221,2.176,222,2.086,223,2.086,254,2.149,255,1.77,257,1.188,258,1.847,264,1.885,267,1.665,270,1.345,272,1.847,281,1.885,283,1.345,293,1.665,296,1.922,297,1.345,309,2.481,312,1.704,321,1.345,322,1.345,324,1.053,337,4.098,369,0.831,416,1.345,417,1.885,418,1.885,419,2.481,422,1.534,424,2.481,425,1.534,428,2.688,430,2.696,431,2.688,432,1.534,436,2.149,448,2.149,543,2.086,705,2.086,706,2.086,707,3.596,708,2.566,709,2.566,710,2.566,711,3.596,712,3.596,713,2.566,714,2.566,715,2.566,716,4.151,717,4.151,718,4.909,719,3.596,720,3.596,721,2.566,722,2.566,723,3.596,724,4.499,725,3.596,726,3.596,727,2.566,728,2.566,729,2.566,730,2.566,731,3.596,732,2.566,733,2.566,734,2.566,735,2.566,736,2.566,737,2.566,738,2.566,739,2.566,740,2.566,741,2.566]],["title/components/TestComponent.html",[19,0.818,83,0.636]],["body/components/TestComponent.html",[4,1.226,13,0.858,14,0.047,15,0.858,16,0.858,17,0.858,18,0.858,19,1.377,26,0.583,27,0.583,28,0.505,31,0.583,43,0.505,54,0.583,55,0.583,56,0.024,57,0.032,58,0.024,67,1.383,71,1.638,83,1.003,85,2.313,89,1.847,90,1.566,91,1.566,92,1.566,93,1.566,95,0.759,96,3.072,103,1.847,104,2.08,105,1.383,106,1.532,107,2.751,108,2.091,110,2.091,140,1.785,163,1.141,164,1.566,167,1.383,195,2.091,196,2.091,197,0.968,198,2.513,199,1.566,200,1.455,201,1.566,202,1.566,203,1.566,204,1.566,205,1.383,206,1.383,207,1.566,348,2.428,381,2.091,560,2.752,686,2.428,687,3.652,688,3.652,689,2.428,690,2.428,691,2.428,692,3.244,694,3.244,696,2.428,697,3.244,698,3.244,703,2.428,704,2.428,742,2.428,743,4.493,744,3.99,745,2.987,746,2.987,747,2.987,748,2.987,749,2.987,750,3.99,751,5.14,752,5.14,753,5.14,754,3.99,755,3.99,756,3.99,757,3.99,758,3.99,759,3.99,760,3.99,761,3.99,762,3.99,763,3.99,764,3.99,765,3.99,766,3.99,767,3.99,768,3.99,769,3.99,770,3.99,771,3.99,772,3.99,773,2.987,774,2.987,775,3.99,776,2.987,777,2.987,778,2.987,779,2.987,780,2.987]],["title/coverage.html",[781,3.142]],["body/coverage.html",[13,1.058,14,0.047,15,1.058,16,1.058,17,1.058,18,1.058,19,1.058,21,0.823,22,1.193,28,0.623,50,1.706,56,0.03,57,0.037,58,0.03,68,2.541,72,2.541,74,2.541,83,1.191,94,2.995,139,1.058,155,1.344,160,1.513,197,1.193,208,1.608,210,3.578,301,2.541,303,2.541,309,2.202,371,2.114,372,1.931,374,2.601,375,2.601,491,2.995,492,2.995,493,2.995,509,2.995,510,2.995,558,3.15,559,2.995,653,2.995,693,2.995,695,4.672,705,2.995,706,2.995,742,2.995,781,2.995,782,2.541,783,3.685,784,3.685,785,3.685,786,3.685,787,4.964,788,5.51,789,3.685,790,4.567,791,3.685,792,3.685,793,3.685]],["title/dependencies.html",[3,2.044,794,2.391]],["body/dependencies.html",[3,2.352,14,0.047,33,3.866,34,3.28,38,2.714,39,2.714,40,2.714,43,0.665,45,3.2,56,0.032,57,0.038,58,0.032,63,3.2,288,2.714,293,1.822,300,3.2,611,2.714,795,3.936,796,3.936,797,3.936,798,4.756,799,3.936,800,5.586,801,3.936,802,3.936,803,5.11,804,3.936,805,3.936,806,3.936,807,3.936,808,3.936,809,3.936,810,3.936,811,3.936,812,3.936,813,3.936,814,3.936,815,3.936,816,3.936,817,3.936,818,3.936,819,3.936]],["title/index.html",[112,0.687,820,1.943,821,1.943]],["body/index.html",[14,0.044,25,2.052,56,0.028,57,0.035,58,0.028,71,1.794,98,2.368,99,0.976,212,2.052,258,1.41,261,2.368,262,2.792,267,1.59,287,2.792,289,3.014,440,2.052,496,2.368,498,3.552,534,3.907,536,2.792,561,2.792,586,3.552,644,3.552,649,3.014,782,3.014,822,3.434,823,3.434,824,4.37,825,3.907,826,3.014,827,3.434,828,3.434,829,4.37,830,3.434,831,3.434,832,3.434,833,3.434,834,3.434,835,3.434,836,3.434,837,3.434,838,3.014,839,2.792,840,3.907,841,2.792,842,2.792,843,2.792,844,2.792,845,3.552,846,2.792,847,2.792,848,2.792,849,2.792,850,2.792,851,2.792,852,3.552,853,4.507,854,2.792,855,2.792,856,3.907,857,2.792,858,3.552,859,2.792,860,2.792,861,3.552,862,2.792,863,2.792,864,2.792,865,2.792,866,2.792,867,2.792,868,2.792,869,3.552,870,2.792,871,2.792,872,2.792,873,2.792,874,2.792,875,3.552,876,3.552,877,2.792,878,2.792,879,2.792,880,2.792,881,2.792,882,2.792,883,2.792,884,2.792,885,2.792,886,2.792,887,2.792,888,2.792,889,2.792,890,2.792,891,2.792,892,2.792,893,2.792,894,2.792,895,2.792,896,2.792,897,2.792,898,2.792,899,2.792,900,2.792,901,2.792,902,2.792,903,2.792,904,2.792,905,2.792]],["title/license.html",[820,1.943,821,1.943,838,1.649]],["body/license.html",[14,0.037,25,2.251,56,0.03,57,0.037,58,0.03,98,2.598,212,2.251,258,1.546,496,2.598,782,2.598,838,2.598,839,3.062,840,4.075,841,3.062,842,3.062,843,3.062,844,3.062,845,3.764,846,3.062,847,3.062,848,3.062,849,3.062,850,3.062,851,3.062,852,3.764,853,4.58,854,3.062,855,3.062,856,4.075,857,3.062,858,3.764,859,3.062,860,3.062,861,3.764,862,3.062,863,3.062,864,3.062,865,3.062,866,3.062,867,3.062,868,3.062,869,3.764,870,3.062,871,3.062,872,3.062,873,3.062,874,3.062,875,3.764,876,3.764,877,3.062,878,3.062,879,3.062,880,3.062,881,3.062,882,3.062,883,3.062,884,3.062,885,3.062,886,3.062,887,3.062,888,3.062,889,3.062,890,3.062,891,3.062,892,3.062,893,3.062,894,3.062,895,3.062,896,3.062,897,3.062,898,3.062,899,3.062,900,3.062,901,3.062,902,3.062,903,3.062,904,3.062,905,3.062]],["title/modules.html",[2,2.025]],["body/modules.html",[1,2.663,2,2.336,14,0.041,20,2.336,34,3.074,56,0.036,57,0.041,58,0.036,906,4.457,907,4.457,908,5.117,909,4.457,910,4.457]],["title/overview.html",[826,2.665]],["body/overview.html",[0,2.29,1,3.49,2,2.008,3,2.29,4,1.573,5,3.115,6,3.115,7,3.115,8,2.642,9,3.115,10,3.115,11,3.115,12,3.115,13,1.451,14,0.046,15,1.451,16,1.451,17,1.451,18,1.451,19,1.451,20,2.647,21,1.128,22,1.636,23,3.803,24,2.642,25,2.29,56,0.031,57,0.038,58,0.031,61,2.29,89,1.774,125,2.29,197,1.241,209,2.29,373,2.642,535,3.803,825,3.115,826,2.642,911,3.832,912,3.832]],["title/routes.html",[61,2.309]],["body/routes.html",[14,0.042,56,0.037,57,0.042,58,0.037,61,2.717]],["title/miscellaneous/typealiases.html",[913,1.429,914,3.42]],["body/miscellaneous/typealiases.html",[14,0.04,46,2.064,56,0.035,57,0.04,58,0.035,99,0.966,100,1.242,106,1.242,112,1.242,139,1.242,142,2.327,159,2.635,296,2.327,374,2.266,375,2.786,397,2.584,398,2.584,399,2.266,913,2.584,915,4.323,916,5.028]],["title/miscellaneous/variables.html",[913,1.429,917,2.78]],["body/miscellaneous/variables.html",[14,0.046,52,2.23,56,0.032,57,0.039,58,0.032,99,1.076,112,1.155,139,1.481,143,2.388,144,1.671,210,2.774,212,2.404,288,2.774,289,2.774,295,3.27,301,3.557,302,3.27,303,3.687,304,3.27,308,3.27,309,2.879,310,3.27,311,3.27,312,1.651,313,3.27,314,3.27,315,3.27,316,3.27,317,3.27,318,3.27,319,3.27,320,3.27,369,1.56,913,2.404,917,3.27,918,5.158]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"directives/LoadScriptDirectiveDirective.html":{},"components/MainSiteComponent.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"injectables/StateStoreService.html":{},"components/TestComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":131,"title":{},"body":{"components/CounterComponent.html":{},"components/ShowLightsComponent.html":{}}}],["0.9.1",{"_index":819,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":125,"title":{},"body":{"components/CounterComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"overview.html":{}}}],["1.0.0",{"_index":810,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":817,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":807,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":788,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":695,"title":{},"body":{"components/ShowRoomsComponent.html":{},"coverage.html":{}}}],["10000",{"_index":314,"title":{},"body":{"injectables/IobrokerService.html":{},"miscellaneous/variables.html":{}}}],["102",{"_index":746,"title":{},"body":{"components/TestComponent.html":{}}}],["11/11",{"_index":789,"title":{},"body":{"coverage.html":{}}}],["115",{"_index":747,"title":{},"body":{"components/TestComponent.html":{}}}],["130",{"_index":748,"title":{},"body":{"components/TestComponent.html":{}}}],["137",{"_index":749,"title":{},"body":{"components/TestComponent.html":{}}}],["16px",{"_index":779,"title":{},"body":{"components/TestComponent.html":{}}}],["18/18",{"_index":786,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":535,"title":{},"body":{"components/MainSiteComponent.html":{},"overview.html":{}}}],["2.0.8",{"_index":812,"title":{},"body":{"dependencies.html":{}}}],["2.2.2",{"_index":803,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":815,"title":{},"body":{"dependencies.html":{}}}],["2019",{"_index":842,"title":{},"body":{"index.html":{},"license.html":{}}}],["3",{"_index":825,"title":{},"body":{"index.html":{},"overview.html":{}}}],["3.0.1",{"_index":813,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":792,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":777,"title":{},"body":{"components/TestComponent.html":{}}}],["5",{"_index":911,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":790,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":348,"title":{},"body":{"injectables/IobrokerService.html":{},"components/TestComponent.html":{}}}],["512.png",{"_index":702,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["6.4.0",{"_index":814,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":912,"title":{},"body":{"overview.html":{}}}],["7/7",{"_index":791,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":507,"title":{},"body":{"directives/LoadScriptDirectiveDirective.html":{}}}],["8.2.10",{"_index":796,"title":{},"body":{"dependencies.html":{}}}],["8.2.2",{"_index":798,"title":{},"body":{"dependencies.html":{}}}],["8.2.9",{"_index":800,"title":{},"body":{"dependencies.html":{}}}],["9/9",{"_index":785,"title":{},"body":{"coverage.html":{}}}],["above",{"_index":874,"title":{},"body":{"index.html":{},"license.html":{}}}],["action",{"_index":900,"title":{},"body":{"index.html":{},"license.html":{}}}],["actual_component",{"_index":207,"title":{},"body":{"components/CounterComponent.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["adapter",{"_index":289,"title":{},"body":{"injectables/IobrokerService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["add",{"_index":469,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["addallstateobjects",{"_index":429,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["adds",{"_index":584,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["addstateobjecttocontainer",{"_index":544,"title":{},"body":{"injectables/SelectorServiceService.html":{}}}],["addstateobjecttocontainer(id",{"_index":442,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["agile",{"_index":763,"title":{},"body":{"components/TestComponent.html":{}}}],["aliases",{"_index":915,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":689,"title":{},"body":{"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["alread",{"_index":477,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["already",{"_index":454,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["and/or",{"_index":867,"title":{},"body":{"index.html":{},"license.html":{}}}],["angular/animations",{"_index":795,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":797,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":799,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":300,"title":{},"body":{"injectables/IobrokerService.html":{},"dependencies.html":{}}}],["angular/core",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"directives/LoadScriptDirectiveDirective.html":{},"components/MainSiteComponent.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"injectables/StateStoreService.html":{},"components/TestComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":801,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":63,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["app",{"_index":107,"title":{},"body":{"components/CounterComponent.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["app.module",{"_index":306,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["app_initializer",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["apploadscript",{"_index":206,"title":{},"body":{"components/CounterComponent.html":{},"directives/LoadScriptDirectiveDirective.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":20,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arising",{"_index":904,"title":{},"body":{"index.html":{},"license.html":{}}}],["array",{"_index":664,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["ascsort",{"_index":566,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["associated",{"_index":854,"title":{},"body":{"index.html":{},"license.html":{}}}],["async",{"_index":428,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"injectables/StateStoreService.html":{}}}],["authors",{"_index":893,"title":{},"body":{"index.html":{},"license.html":{}}}],["automaticly",{"_index":394,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["available",{"_index":910,"title":{},"body":{"modules.html":{}}}],["await",{"_index":431,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"injectables/StateStoreService.html":{}}}],["background",{"_index":698,"title":{},"body":{"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["backlog",{"_index":828,"title":{},"body":{"index.html":{}}}],["behaviorsubject",{"_index":281,"title":{},"body":{"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"injectables/StateStoreService.html":{}}}],["behaviorsubject('iobroker",{"_index":344,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["behaviorsubject([null",{"_index":290,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["behaviorsubject([statecontainer.iostate",{"_index":452,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["behaviorsubject(enumio",{"_index":732,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["behaviorsubject(false",{"_index":278,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["behaviorsubject(null",{"_index":283,"title":{},"body":{"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"injectables/StateStoreService.html":{}}}],["behaviorsubject(objectio",{"_index":725,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["behaviorsubject(stateio",{"_index":719,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["bindcallback",{"_index":294,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["boolean",{"_index":400,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"components/MainSiteComponent.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["bred",{"_index":770,"title":{},"body":{"components/TestComponent.html":{}}}],["breed",{"_index":754,"title":{},"body":{"components/TestComponent.html":{}}}],["breeds",{"_index":760,"title":{},"body":{"components/TestComponent.html":{}}}],["browse",{"_index":908,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["c",{"_index":841,"title":{},"body":{"index.html":{},"license.html":{}}}],["cache",{"_index":427,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["call",{"_index":587,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["callbacks",{"_index":236,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["card",{"_index":775,"title":{},"body":{"components/TestComponent.html":{}}}],["case",{"_index":607,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["center",{"_index":687,"title":{},"body":{"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["change",{"_index":577,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["changes",{"_index":136,"title":{},"body":{"components/CounterComponent.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"injectables/StateStoreService.html":{}}}],["charge",{"_index":849,"title":{},"body":{"index.html":{},"license.html":{}}}],["check",{"_index":462,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["checkstateupdate",{"_index":415,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["claim",{"_index":896,"title":{},"body":{"index.html":{},"license.html":{}}}],["class",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"directives/LoadScriptDirectiveDirective.html":{},"components/MainSiteComponent.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"injectables/StateStoreService.html":{},"components/TestComponent.html":{}}}],["clr/angular",{"_index":611,"title":{},"body":{"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"dependencies.html":{}}}],["clr/icons",{"_index":804,"title":{},"body":{"dependencies.html":{}}}],["clr/ui",{"_index":805,"title":{},"body":{"dependencies.html":{}}}],["clrdatagridsortorder",{"_index":610,"title":{},"body":{"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{}}}],["clrdatagridsortorder.asc",{"_index":591,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["clrdatagridsortorder.desc",{"_index":661,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["column",{"_index":774,"title":{},"body":{"components/TestComponent.html":{}}}],["command",{"_index":336,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["common",{"_index":598,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["component",{"_index":83,"title":{"components/CounterComponent.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/CounterComponent.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":199,"title":{},"body":{"components/CounterComponent.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["components",{"_index":89,"title":{},"body":{"components/CounterComponent.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{},"overview.html":{}}}],["conditions",{"_index":873,"title":{},"body":{"index.html":{},"license.html":{}}}],["config",{"_index":309,"title":{},"body":{"injectables/IobrokerService.html":{},"injectables/StateStoreService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configs",{"_index":251,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["configuration",{"_index":308,"title":{},"body":{"injectables/IobrokerService.html":{},"miscellaneous/variables.html":{}}}],["connect",{"_index":307,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["connected",{"_index":537,"title":{},"body":{"components/MainSiteComponent.html":{}}}],["connection",{"_index":212,"title":{},"body":{"injectables/IobrokerService.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["console",{"_index":241,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["console.error('iobrokerconnection:onerror",{"_index":340,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["console.error(err",{"_index":435,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["console.log('iobrokerconnection:onauth",{"_index":334,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["console.log('iobrokerconnection:oncommand",{"_index":338,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["console.log('iobrokerconnection:onrefresh",{"_index":333,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["console.log('nach",{"_index":710,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["console.log('service",{"_index":343,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["console.log(ioobject",{"_index":620,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["console.log(iostate",{"_index":619,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["console.log(this.result1",{"_index":352,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["const",{"_index":76,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"injectables/StateStoreService.html":{}}}],["constructor",{"_index":164,"title":{},"body":{"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"directives/LoadScriptDirectiveDirective.html":{},"components/ShowLightsComponent.html":{},"components/TestComponent.html":{}}}],["constructor(private",{"_index":324,"title":{},"body":{"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"components/MainSiteComponent.html":{},"injectables/SelectorServiceService.html":{},"components/ShowRoomsComponent.html":{},"injectables/StateStoreService.html":{}}}],["constructor(socket",{"_index":232,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["container",{"_index":381,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["containermap",{"_index":382,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["content",{"_index":692,"title":{},"body":{"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["contract",{"_index":901,"title":{},"body":{"index.html":{},"license.html":{}}}],["copes",{"_index":764,"title":{},"body":{"components/TestComponent.html":{}}}],["copies",{"_index":869,"title":{},"body":{"index.html":{},"license.html":{}}}],["copy",{"_index":852,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":840,"title":{},"body":{"index.html":{},"license.html":{}}}],["corresponde",{"_index":396,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["corresponding",{"_index":391,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["count",{"_index":189,"title":{},"body":{"components/CounterComponent.html":{}}}],["counter",{"_index":84,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CounterComponent.html":{}}}],["counter'},{'name",{"_index":201,"title":{},"body":{"components/CounterComponent.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["counter.component.css",{"_index":109,"title":{},"body":{"components/CounterComponent.html":{}}}],["counter.component.html",{"_index":111,"title":{},"body":{"components/CounterComponent.html":{}}}],["counter/counter.component",{"_index":66,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["countercomponent",{"_index":13,"title":{"components/CounterComponent.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CounterComponent.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{},"coverage.html":{},"overview.html":{}}}],["counterdecrement",{"_index":117,"title":{},"body":{"components/CounterComponent.html":{}}}],["counterincrement",{"_index":118,"title":{},"body":{"components/CounterComponent.html":{}}}],["counterreset",{"_index":119,"title":{},"body":{"components/CounterComponent.html":{}}}],["counterselectorfn",{"_index":114,"title":{},"body":{"components/CounterComponent.html":{}}}],["counterselectorfn:tselectionfn",{"_index":162,"title":{},"body":{"components/CounterComponent.html":{}}}],["cover",{"_index":704,"title":{},"body":{"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["coverage",{"_index":781,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":440,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"index.html":{}}}],["created",{"_index":478,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["createria",{"_index":466,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["creates",{"_index":459,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["createupdateselectionmap",{"_index":545,"title":{},"body":{"injectables/SelectorServiceService.html":{}}}],["createupdateselectionmap(id",{"_index":461,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["criteria",{"_index":475,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["current",{"_index":282,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["damages",{"_index":897,"title":{},"body":{"index.html":{},"license.html":{}}}],["data",{"_index":337,"title":{},"body":{"injectables/IobrokerService.html":{},"injectables/StateStoreService.html":{}}}],["data.hasownproperty(id",{"_index":716,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["data[id",{"_index":717,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["datatype",{"_index":389,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["deal",{"_index":855,"title":{},"body":{"index.html":{},"license.html":{}}}],["dealings",{"_index":905,"title":{},"body":{"index.html":{},"license.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decrement",{"_index":124,"title":{},"body":{"components/CounterComponent.html":{}}}],["default",{"_index":143,"title":{},"body":{"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":122,"title":{},"body":{"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["description",{"_index":95,"title":{},"body":{"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"directives/LoadScriptDirectiveDirective.html":{},"components/MainSiteComponent.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"injectables/StateStoreService.html":{},"components/TestComponent.html":{}}}],["descsort",{"_index":657,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["details",{"_index":512,"title":{},"body":{"components/MainSiteComponent.html":{}}}],["direction",{"_index":773,"title":{},"body":{"components/TestComponent.html":{}}}],["directive",{"_index":197,"title":{"directives/LoadScriptDirectiveDirective.html":{}},"body":{"components/CounterComponent.html":{},"directives/LoadScriptDirectiveDirective.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directive.directive.ts",{"_index":493,"title":{},"body":{"directives/LoadScriptDirectiveDirective.html":{},"coverage.html":{}}}],["directives",{"_index":205,"title":{},"body":{"components/CounterComponent.html":{},"directives/LoadScriptDirectiveDirective.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["directly",{"_index":479,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["display",{"_index":560,"title":{},"body":{"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["distinct",{"_index":758,"title":{},"body":{"components/TestComponent.html":{}}}],["distribute",{"_index":865,"title":{},"body":{"index.html":{},"license.html":{}}}],["div",{"_index":686,"title":{},"body":{"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["document.createelement('script",{"_index":499,"title":{},"body":{"directives/LoadScriptDirectiveDirective.html":{}}}],["document.getelementsbytagname('head')[0].appendchild(node",{"_index":508,"title":{},"body":{"directives/LoadScriptDirectiveDirective.html":{}}}],["documentation",{"_index":782,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dog",{"_index":753,"title":{},"body":{"components/TestComponent.html":{}}}],["dom",{"_index":92,"title":{},"body":{"components/CounterComponent.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["dynamic",{"_index":802,"title":{},"body":{"dependencies.html":{}}}],["e.id",{"_index":636,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["eiobroker",{"_index":379,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["element",{"_index":196,"title":{},"body":{"components/CounterComponent.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["elements",{"_index":809,"title":{},"body":{"dependencies.html":{}}}],["emit",{"_index":235,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["enter",{"_index":191,"title":{},"body":{"components/CounterComponent.html":{}}}],["enty",{"_index":583,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["enum",{"_index":255,"title":{},"body":{"injectables/IobrokerService.html":{},"components/ShowLightsComponent.html":{},"injectables/StateStoreService.html":{}}}],["enum_",{"_index":627,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["enum_.common.members.join('\\n",{"_index":677,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["enum_.common.members.length",{"_index":676,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["enum_.common.name",{"_index":673,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["enum_.common.name.de",{"_index":675,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["enum_.ts",{"_index":678,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["enumio",{"_index":729,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["enummap",{"_index":708,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["enums",{"_index":254,"title":{},"body":{"injectables/IobrokerService.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"injectables/StateStoreService.html":{}}}],["enums.foreach((value",{"_index":670,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["err",{"_index":339,"title":{},"body":{"injectables/IobrokerService.html":{},"components/MainSiteComponent.html":{}}}],["error",{"_index":261,"title":{},"body":{"injectables/IobrokerService.html":{},"components/MainSiteComponent.html":{},"index.html":{}}}],["established",{"_index":280,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["event",{"_index":892,"title":{},"body":{"index.html":{},"license.html":{}}}],["example",{"_index":96,"title":{},"body":{"components/CounterComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["export",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"directives/LoadScriptDirectiveDirective.html":{},"components/MainSiteComponent.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"injectables/StateStoreService.html":{},"components/TestComponent.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":883,"title":{},"body":{"index.html":{},"license.html":{}}}],["external",{"_index":494,"title":{},"body":{"directives/LoadScriptDirectiveDirective.html":{}}}],["false",{"_index":150,"title":{},"body":{"components/CounterComponent.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"directives/LoadScriptDirectiveDirective.html":{},"injectables/SelectorServiceService.html":{}}}],["field",{"_index":192,"title":{},"body":{"components/CounterComponent.html":{}}}],["file",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"directives/LoadScriptDirectiveDirective.html":{},"components/MainSiteComponent.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"injectables/StateStoreService.html":{},"components/TestComponent.html":{},"coverage.html":{}}}],["files",{"_index":496,"title":{},"body":{"directives/LoadScriptDirectiveDirective.html":{},"index.html":{},"license.html":{}}}],["filter",{"_index":270,"title":{},"body":{"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"injectables/StateStoreService.html":{}}}],["fit",{"_index":465,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["fitness",{"_index":888,"title":{},"body":{"index.html":{},"license.html":{}}}],["fits",{"_index":268,"title":{},"body":{"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["fitting",{"_index":402,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["flex",{"_index":688,"title":{},"body":{"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["folders",{"_index":700,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["following",{"_index":98,"title":{},"body":{"components/CounterComponent.html":{},"index.html":{},"license.html":{}}}],["forcenew",{"_index":318,"title":{},"body":{"injectables/IobrokerService.html":{},"miscellaneous/variables.html":{}}}],["formsmodule",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["free",{"_index":848,"title":{},"body":{"index.html":{},"license.html":{}}}],["full",{"_index":81,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"components/CounterComponent.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["funtion",{"_index":473,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["furnished",{"_index":872,"title":{},"body":{"index.html":{},"license.html":{}}}],["getconfig",{"_index":222,"title":{},"body":{"injectables/IobrokerService.html":{},"injectables/StateStoreService.html":{}}}],["getenums",{"_index":223,"title":{},"body":{"injectables/IobrokerService.html":{},"injectables/StateStoreService.html":{}}}],["getinitinformations",{"_index":522,"title":{},"body":{"components/MainSiteComponent.html":{}}}],["getisconnected",{"_index":224,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["getlivehost",{"_index":225,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["getnewcounter",{"_index":120,"title":{},"body":{"components/CounterComponent.html":{}}}],["getnewerror",{"_index":226,"title":{},"body":{"injectables/IobrokerService.html":{},"components/MainSiteComponent.html":{}}}],["getobjects",{"_index":227,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["getobjecttree",{"_index":342,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["getselector",{"_index":546,"title":{},"body":{"injectables/SelectorServiceService.html":{}}}],["getselector(name",{"_index":476,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["getstateperid(id",{"_index":739,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["getstates",{"_index":228,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["getstates(ids",{"_index":265,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["getting",{"_index":820,"title":{"index.html":{},"license.html":{}},"body":{}}],["getupdatedobject",{"_index":229,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["getupdatedstate",{"_index":230,"title":{},"body":{"injectables/IobrokerService.html":{},"components/MainSiteComponent.html":{}}}],["given",{"_index":582,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["granted",{"_index":847,"title":{},"body":{"index.html":{},"license.html":{}}}],["graph",{"_index":909,"title":{},"body":{"modules.html":{}}}],["hammerjs",{"_index":811,"title":{},"body":{"dependencies.html":{}}}],["handels",{"_index":211,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["handling",{"_index":830,"title":{},"body":{"index.html":{}}}],["header",{"_index":696,"title":{},"body":{"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["help",{"_index":213,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["hereby",{"_index":846,"title":{},"body":{"index.html":{},"license.html":{}}}],["holders",{"_index":894,"title":{},"body":{"index.html":{},"license.html":{}}}],["holds",{"_index":392,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["homeoverview",{"_index":824,"title":{},"body":{"index.html":{}}}],["homeoverview.0",{"_index":302,"title":{},"body":{"injectables/IobrokerService.html":{},"miscellaneous/variables.html":{}}}],["homepage/homepage.component",{"_index":65,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["homepagecomponent",{"_index":64,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["hompage",{"_index":82,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["hostname",{"_index":517,"title":{},"body":{"components/MainSiteComponent.html":{}}}],["hostname}}connected",{"_index":539,"title":{},"body":{"components/MainSiteComponent.html":{}}}],["html",{"_index":195,"title":{},"body":{"components/CounterComponent.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["http://192.168.90.1:8082",{"_index":304,"title":{},"body":{"injectables/IobrokerService.html":{},"miscellaneous/variables.html":{}}}],["hum",{"_index":832,"title":{},"body":{"index.html":{}}}],["hunting",{"_index":771,"title":{},"body":{"components/TestComponent.html":{}}}],["id",{"_index":100,"title":{},"body":{"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"components/MainSiteComponent.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"injectables/StateStoreService.html":{},"miscellaneous/typealiases.html":{}}}],["id:id",{"_index":631,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["id=iobroker",{"_index":405,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["id=selectionname",{"_index":408,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["identifier",{"_index":783,"title":{},"body":{"coverage.html":{}}}],["identifiers",{"_index":299,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["ids",{"_index":269,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["if(!this.lightsarray",{"_index":629,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["if(index",{"_index":637,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["if(iostate",{"_index":175,"title":{},"body":{"components/CounterComponent.html":{},"components/ShowLightsComponent.html":{}}}],["if(isnan(this.newcounter",{"_index":186,"title":{},"body":{"components/CounterComponent.html":{}}}],["if(selection.stateobjectcontainermap.has(id",{"_index":468,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["if(selectionfn(stateobjectcontainer",{"_index":485,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["if(stateio",{"_index":439,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["if(stateobjectcontainer",{"_index":146,"title":{},"body":{"components/CounterComponent.html":{},"components/ShowLightsComponent.html":{}}}],["if(this.selectionmap.has(name",{"_index":481,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["if(typeof",{"_index":184,"title":{},"body":{"components/CounterComponent.html":{}}}],["ignore",{"_index":163,"title":{},"body":{"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"directives/LoadScriptDirectiveDirective.html":{},"components/MainSiteComponent.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"injectables/StateStoreService.html":{},"components/TestComponent.html":{}}}],["image",{"_index":697,"title":{},"body":{"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["implements",{"_index":103,"title":{},"body":{"components/CounterComponent.html":{},"directives/LoadScriptDirectiveDirective.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["implied",{"_index":884,"title":{},"body":{"index.html":{},"license.html":{}}}],["import",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"directives/LoadScriptDirectiveDirective.html":{},"components/MainSiteComponent.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"injectables/StateStoreService.html":{},"components/TestComponent.html":{}}}],["imports",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["included",{"_index":877,"title":{},"body":{"index.html":{},"license.html":{}}}],["including",{"_index":858,"title":{},"body":{"index.html":{},"license.html":{}}}],["increment",{"_index":129,"title":{},"body":{"components/CounterComponent.html":{}}}],["index",{"_index":112,"title":{"index.html":{}},"body":{"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["infinity",{"_index":316,"title":{},"body":{"injectables/IobrokerService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"directives/LoadScriptDirectiveDirective.html":{},"components/MainSiteComponent.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"injectables/StateStoreService.html":{},"components/TestComponent.html":{}}}],["init",{"_index":133,"title":{},"body":{"components/CounterComponent.html":{},"injectables/IobrokerService.html":{}}}],["initalllights",{"_index":569,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["inits",{"_index":660,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["injectable",{"_index":208,"title":{"injectables/IobrokerService.html":{},"injectables/SelectorServiceService.html":{},"injectables/StateStoreService.html":{}},"body":{"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"injectables/StateStoreService.html":{},"coverage.html":{}}}],["injectables",{"_index":209,"title":{},"body":{"injectables/IobrokerService.html":{},"injectables/SelectorServiceService.html":{},"injectables/StateStoreService.html":{},"overview.html":{}}}],["input",{"_index":157,"title":{},"body":{"components/CounterComponent.html":{},"directives/LoadScriptDirectiveDirective.html":{}}}],["input('script",{"_index":497,"title":{},"body":{"directives/LoadScriptDirectiveDirective.html":{}}}],["instance",{"_index":335,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["interface",{"_index":371,"title":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{}},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"coverage.html":{}}}],["interfaces",{"_index":373,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"overview.html":{}}}],["inu",{"_index":752,"title":{},"body":{"components/TestComponent.html":{}}}],["io",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"injectables/IobrokerService.html":{},"dependencies.html":{}}}],["iobroker",{"_index":99,"title":{},"body":{"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"components/MainSiteComponent.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"injectables/StateStoreService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["iobroker.homeoverview",{"_index":822,"title":{},"body":{"index.html":{}}}],["iobroker.service",{"_index":158,"title":{},"body":{"components/CounterComponent.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"components/MainSiteComponent.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"injectables/StateStoreService.html":{}}}],["iobrokerconnection",{"_index":285,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["iobrokerconnection(namespace",{"_index":326,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["iobrokerservice",{"_index":21,"title":{"injectables/IobrokerService.html":{}},"body":{"modules/AppModule.html":{},"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"components/MainSiteComponent.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"injectables/StateStoreService.html":{},"coverage.html":{},"overview.html":{}}}],["ioobject",{"_index":174,"title":{},"body":{"components/CounterComponent.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{}}}],["ioobject:ioobject",{"_index":633,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["ioobject:object",{"_index":626,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["iostate",{"_index":177,"title":{},"body":{"components/CounterComponent.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{}}}],["iostate:iostate",{"_index":632,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["iostate:object",{"_index":625,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["iostate['val",{"_index":178,"title":{},"body":{"components/CounterComponent.html":{},"components/ShowLightsComponent.html":{}}}],["isconnected",{"_index":215,"title":{},"body":{"injectables/IobrokerService.html":{},"components/MainSiteComponent.html":{}}}],["isconnected}}error",{"_index":540,"title":{},"body":{"components/MainSiteComponent.html":{}}}],["iselection",{"_index":372,"title":{"interfaces/Iselection.html":{}},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"coverage.html":{}}}],["isobject",{"_index":612,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["istateobjectconainers",{"_index":397,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"miscellaneous/typealiases.html":{}}}],["istateobjectcontainer",{"_index":160,"title":{"interfaces/IstateObjectContainer.html":{}},"body":{"components/CounterComponent.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"coverage.html":{}}}],["items",{"_index":690,"title":{},"body":{"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["japan",{"_index":761,"title":{},"body":{"components/TestComponent.html":{}}}],["javascript",{"_index":495,"title":{},"body":{"directives/LoadScriptDirectiveDirective.html":{}}}],["javascript.0.counterchannel.counterdevice.counte",{"_index":102,"title":{},"body":{"components/CounterComponent.html":{}}}],["javascript.0.counterchannel.counterdevice.counter",{"_index":149,"title":{},"body":{"components/CounterComponent.html":{}}}],["json.stringify(stateio",{"_index":531,"title":{},"body":{"components/MainSiteComponent.html":{}}}],["justify",{"_index":691,"title":{},"body":{"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["key",{"_index":312,"title":{},"body":{"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"components/ShowRoomsComponent.html":{},"injectables/StateStoreService.html":{},"miscellaneous/variables.html":{}}}],["key.startswith('enum.rooms",{"_index":671,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["kind",{"_index":882,"title":{},"body":{"index.html":{},"license.html":{}}}],["last",{"_index":683,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["lastupdate",{"_index":668,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"components/CounterComponent.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{},"overview.html":{}}}],["liability",{"_index":898,"title":{},"body":{"index.html":{},"license.html":{}}}],["liable",{"_index":895,"title":{},"body":{"index.html":{},"license.html":{}}}],["lib/iobrokerconnection",{"_index":298,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["lib/iobrokerconnection.ts",{"_index":214,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["license",{"_index":838,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["lightarray",{"_index":581,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["lightobject.ioobject.common.name",{"_index":645,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["lightobject.roomsidarray",{"_index":646,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["lights",{"_index":561,"title":{},"body":{"components/ShowLightsComponent.html":{},"index.html":{}}}],["lights'},{'name",{"_index":203,"title":{},"body":{"components/CounterComponent.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["lights.component",{"_index":75,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["lights.component.css",{"_index":564,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["lights.component.html",{"_index":565,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["lights.component.ts",{"_index":559,"title":{},"body":{"components/ShowLightsComponent.html":{},"coverage.html":{}}}],["lights.component.ts:110",{"_index":580,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["lights.component.ts:130",{"_index":576,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["lights.component.ts:31",{"_index":592,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["lights.component.ts:36",{"_index":596,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["lights.component.ts:42",{"_index":604,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["lights.component.ts:73",{"_index":572,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["lights/show",{"_index":74,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ShowLightsComponent.html":{},"coverage.html":{}}}],["lightsarray",{"_index":567,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["lightsarray:[{id:string",{"_index":614,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["lightselector",{"_index":605,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["lightselectorfn",{"_index":568,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["limitation",{"_index":859,"title":{},"body":{"index.html":{},"license.html":{}}}],["limited",{"_index":885,"title":{},"body":{"index.html":{},"license.html":{}}}],["line/100/spreadsheet",{"_index":701,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["listen",{"_index":234,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["literal",{"_index":595,"title":{},"body":{"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{}}}],["livehost",{"_index":216,"title":{},"body":{"injectables/IobrokerService.html":{},"components/MainSiteComponent.html":{}}}],["load",{"_index":430,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"directives/LoadScriptDirectiveDirective.html":{},"injectables/SelectorServiceService.html":{},"injectables/StateStoreService.html":{}}}],["loadallconfigintoobservermap",{"_index":736,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["loadallenumsintoobservermap",{"_index":727,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["loadallobjectsintoobservermap",{"_index":721,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["loadallstatesintoobservermap",{"_index":711,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["loading",{"_index":643,"title":{},"body":{"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{}}}],["loads",{"_index":426,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["loadscriptdirectivedirective",{"_index":15,"title":{"directives/LoadScriptDirectiveDirective.html":{}},"body":{"modules/AppModule.html":{},"components/CounterComponent.html":{},"directives/LoadScriptDirectiveDirective.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{},"coverage.html":{},"overview.html":{}}}],["log",{"_index":242,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["longer",{"_index":707,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["main",{"_index":67,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CounterComponent.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["mainsite",{"_index":79,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["mainsitecomponent",{"_index":16,"title":{"components/MainSiteComponent.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CounterComponent.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{},"coverage.html":{},"overview.html":{}}}],["map",{"_index":296,"title":{},"body":{"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"injectables/StateStoreService.html":{},"miscellaneous/typealiases.html":{}}}],["mapchangeobserver",{"_index":384,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["mapp",{"_index":410,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["maps",{"_index":712,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["matching",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"directives/LoadScriptDirectiveDirective.html":{},"components/MainSiteComponent.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"injectables/StateStoreService.html":{},"components/TestComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":776,"title":{},"body":{"components/TestComponent.html":{}}}],["members",{"_index":667,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["merchantability",{"_index":887,"title":{},"body":{"index.html":{},"license.html":{}}}],["merge",{"_index":863,"title":{},"body":{"index.html":{},"license.html":{}}}],["message",{"_index":262,"title":{},"body":{"injectables/IobrokerService.html":{},"index.html":{}}}],["metadata",{"_index":105,"title":{},"body":{"components/CounterComponent.html":{},"directives/LoadScriptDirectiveDirective.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["methods",{"_index":116,"title":{},"body":{"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{}}}],["miscellaneous",{"_index":913,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":839,"title":{},"body":{"index.html":{},"license.html":{}}}],["modify",{"_index":862,"title":{},"body":{"index.html":{},"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["motion",{"_index":833,"title":{},"body":{"index.html":{}}}],["mountainous",{"_index":767,"title":{},"body":{"components/TestComponent.html":{}}}],["multi",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["mvp",{"_index":829,"title":{},"body":{"index.html":{}}}],["name",{"_index":200,"title":{},"body":{"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"components/MainSiteComponent.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["namespace",{"_index":301,"title":{},"body":{"injectables/IobrokerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["needed",{"_index":399,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["new",{"_index":155,"title":{},"body":{"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"injectables/StateStoreService.html":{},"coverage.html":{}}}],["new_counter",{"_index":138,"title":{},"body":{"components/CounterComponent.html":{}}}],["new_enum.id",{"_index":682,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["new_enum.lastupdate",{"_index":684,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["new_enum.members",{"_index":685,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["new_enum.name",{"_index":680,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["new_enum.numberofmembers",{"_index":681,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["new_enums",{"_index":658,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["new_ioobject",{"_index":590,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["new_iostate",{"_index":589,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["newcounter",{"_index":115,"title":{},"body":{"components/CounterComponent.html":{}}}],["newerror",{"_index":217,"title":{},"body":{"injectables/IobrokerService.html":{},"components/MainSiteComponent.html":{}}}],["newerror}}updated",{"_index":541,"title":{},"body":{"components/MainSiteComponent.html":{}}}],["next",{"_index":464,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["ngmodule",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":167,"title":{},"body":{"components/CounterComponent.html":{},"directives/LoadScriptDirectiveDirective.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["ngrx/core",{"_index":806,"title":{},"body":{"dependencies.html":{}}}],["ngx",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"injectables/IobrokerService.html":{},"dependencies.html":{}}}],["node",{"_index":498,"title":{},"body":{"directives/LoadScriptDirectiveDirective.html":{},"index.html":{}}}],["node.async",{"_index":504,"title":{},"body":{"directives/LoadScriptDirectiveDirective.html":{}}}],["node.charset",{"_index":505,"title":{},"body":{"directives/LoadScriptDirectiveDirective.html":{}}}],["node.src",{"_index":500,"title":{},"body":{"directives/LoadScriptDirectiveDirective.html":{}}}],["node.type",{"_index":502,"title":{},"body":{"directives/LoadScriptDirectiveDirective.html":{}}}],["noninfringement",{"_index":891,"title":{},"body":{"index.html":{},"license.html":{}}}],["notice",{"_index":875,"title":{},"body":{"index.html":{},"license.html":{}}}],["now",{"_index":244,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["null",{"_index":172,"title":{},"body":{"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"injectables/StateStoreService.html":{}}}],["number",{"_index":140,"title":{},"body":{"components/CounterComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["number.parseint(this.newcounter",{"_index":185,"title":{},"body":{"components/CounterComponent.html":{}}}],["numberofmembers",{"_index":666,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["obj",{"_index":329,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["objctio",{"_index":423,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["object",{"_index":272,"title":{},"body":{"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"injectables/StateStoreService.html":{}}}],["object.keys(stateobjectcontainer.ioobject['enums']).length",{"_index":603,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["object.values(ioobject['enums'])[0].tostring",{"_index":628,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["objectcontainer",{"_index":404,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["objectio",{"_index":723,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["objects",{"_index":264,"title":{},"body":{"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"injectables/StateStoreService.html":{}}}],["objects[id",{"_index":437,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["observable(observer",{"_index":356,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["observer",{"_index":257,"title":{},"body":{"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"injectables/StateStoreService.html":{}}}],["observer.next([id",{"_index":358,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["observermap",{"_index":480,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["observermap.set(key",{"_index":486,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["observers",{"_index":472,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["observersperselectionmap",{"_index":463,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["obtaining",{"_index":851,"title":{},"body":{"index.html":{},"license.html":{}}}],["onauth",{"_index":245,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["onchangecounter",{"_index":121,"title":{},"body":{"components/CounterComponent.html":{}}}],["onchangeswitch",{"_index":570,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["onchangeswitch(id",{"_index":575,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["onchangeswitch(id:string",{"_index":640,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["oncommand",{"_index":246,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["onconnchange",{"_index":238,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["one",{"_index":585,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["onerror",{"_index":247,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["ongoing",{"_index":837,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":104,"title":{},"body":{"components/CounterComponent.html":{},"directives/LoadScriptDirectiveDirective.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["onobjectchange",{"_index":237,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["onrefresh",{"_index":240,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["onstatechange",{"_index":239,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["option",{"_index":750,"title":{},"body":{"components/TestComponent.html":{}}}],["optional",{"_index":249,"title":{},"body":{"injectables/IobrokerService.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{}}}],["options",{"_index":310,"title":{},"body":{"injectables/IobrokerService.html":{},"miscellaneous/variables.html":{}}}],["original",{"_index":757,"title":{},"body":{"components/TestComponent.html":{}}}],["originally",{"_index":769,"title":{},"body":{"components/TestComponent.html":{}}}],["otherwise",{"_index":903,"title":{},"body":{"index.html":{},"license.html":{}}}],["out",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":826,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":794,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":778,"title":{},"body":{"components/TestComponent.html":{}}}],["page",{"_index":649,"title":{},"body":{"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"index.html":{}}}],["pagination.firstitem",{"_index":650,"title":{},"body":{"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{}}}],["pagination.lastitem",{"_index":651,"title":{},"body":{"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{}}}],["pagination.totalitems",{"_index":652,"title":{},"body":{"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{}}}],["param",{"_index":323,"title":{},"body":{"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"directives/LoadScriptDirectiveDirective.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{}}}],["parameters",{"_index":248,"title":{},"body":{"injectables/IobrokerService.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{}}}],["particular",{"_index":889,"title":{},"body":{"index.html":{},"license.html":{}}}],["path",{"_index":77,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":80,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["per",{"_index":648,"title":{},"body":{"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{}}}],["permission",{"_index":845,"title":{},"body":{"index.html":{},"license.html":{}}}],["permit",{"_index":870,"title":{},"body":{"index.html":{},"license.html":{}}}],["person",{"_index":850,"title":{},"body":{"index.html":{},"license.html":{}}}],["persons",{"_index":871,"title":{},"body":{"index.html":{},"license.html":{}}}],["portions",{"_index":879,"title":{},"body":{"index.html":{},"license.html":{}}}],["power",{"_index":836,"title":{},"body":{"index.html":{}}}],["pressure",{"_index":834,"title":{},"body":{"index.html":{}}}],["private",{"_index":165,"title":{},"body":{"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"components/MainSiteComponent.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"injectables/StateStoreService.html":{}}}],["project",{"_index":827,"title":{},"body":{"index.html":{}}}],["promise",{"_index":252,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["promise((resolve",{"_index":360,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["properties",{"_index":113,"title":{},"body":{"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{}}}],["provided",{"_index":880,"title":{},"body":{"index.html":{},"license.html":{}}}],["providedin",{"_index":321,"title":{},"body":{"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"injectables/StateStoreService.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":221,"title":{},"body":{"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"injectables/StateStoreService.html":{}}}],["publish",{"_index":864,"title":{},"body":{"index.html":{},"license.html":{}}}],["purpose",{"_index":890,"title":{},"body":{"index.html":{},"license.html":{}}}],["query",{"_index":311,"title":{},"body":{"injectables/IobrokerService.html":{},"miscellaneous/variables.html":{}}}],["reads",{"_index":573,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["reconnection",{"_index":317,"title":{},"body":{"injectables/IobrokerService.html":{},"miscellaneous/variables.html":{}}}],["reconnectionattempts",{"_index":315,"title":{},"body":{"injectables/IobrokerService.html":{},"miscellaneous/variables.html":{}}}],["reconnectiondelay",{"_index":313,"title":{},"body":{"injectables/IobrokerService.html":{},"miscellaneous/variables.html":{}}}],["redirectto",{"_index":78,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["registered",{"_index":406,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["reject",{"_index":361,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["reject(err",{"_index":363,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["representing",{"_index":388,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["represents",{"_index":376,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["required",{"_index":193,"title":{},"body":{"components/CounterComponent.html":{}}}],["reset",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"components/CounterComponent.html":{},"overview.html":{}}}],["resolve(data",{"_index":364,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["restriction",{"_index":857,"title":{},"body":{"index.html":{},"license.html":{}}}],["result",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"directives/LoadScriptDirectiveDirective.html":{},"components/MainSiteComponent.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"injectables/StateStoreService.html":{},"components/TestComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"directives/LoadScriptDirectiveDirective.html":{},"components/MainSiteComponent.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"injectables/StateStoreService.html":{},"components/TestComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"injectables/StateStoreService.html":{}}}],["returns",{"_index":126,"title":{},"body":{"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{}}}],["rights",{"_index":860,"title":{},"body":{"index.html":{},"license.html":{}}}],["role",{"_index":599,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["room",{"_index":563,"title":{},"body":{"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{}}}],["rooms",{"_index":654,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["rooms'},{'name",{"_index":204,"title":{},"body":{"components/CounterComponent.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["rooms.component",{"_index":73,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rooms.component.css",{"_index":655,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["rooms.component.html",{"_index":656,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["rooms.component.ts",{"_index":653,"title":{},"body":{"components/ShowRoomsComponent.html":{},"coverage.html":{}}}],["rooms.component.ts:24",{"_index":662,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["rooms.component.ts:27",{"_index":663,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["rooms.component.ts:39",{"_index":659,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["rooms/show",{"_index":72,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ShowRoomsComponent.html":{},"coverage.html":{}}}],["roomsidarray:enum_",{"_index":634,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["roomsidarray:string",{"_index":615,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["root",{"_index":322,"title":{},"body":{"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"injectables/StateStoreService.html":{}}}],["routermodule",{"_index":62,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":88,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":61,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module.ts",{"_index":60,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":483,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["rxjs",{"_index":293,"title":{},"body":{"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"injectables/StateStoreService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":297,"title":{},"body":{"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"injectables/StateStoreService.html":{}}}],["save",{"_index":487,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["script",{"_index":492,"title":{},"body":{"directives/LoadScriptDirectiveDirective.html":{},"coverage.html":{}}}],["see",{"_index":287,"title":{},"body":{"injectables/IobrokerService.html":{},"index.html":{}}}],["selecetion",{"_index":377,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["select",{"_index":153,"title":{},"body":{"components/CounterComponent.html":{},"components/ShowLightsComponent.html":{}}}],["selection",{"_index":152,"title":{},"body":{"components/CounterComponent.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{}}}],["selection.mapchangeobserver$.next(this.stateobjectcontainermap.get(id",{"_index":471,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["selection.mapchangeobserver$.subscribe((stateobjectcontainer",{"_index":171,"title":{},"body":{"components/CounterComponent.html":{},"components/ShowLightsComponent.html":{}}}],["selection.selectionfn(stateobjectcontainer",{"_index":467,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["selection.stateobjectcontainermap.foreach((stateobjectcontainer",{"_index":182,"title":{},"body":{"components/CounterComponent.html":{},"components/ShowLightsComponent.html":{}}}],["selection.stateobjectcontainermap.set(id",{"_index":470,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["selection:iselection",{"_index":489,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["selectionfn",{"_index":385,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["selectionmap",{"_index":409,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["selectionname",{"_index":457,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["selections",{"_index":407,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["selector",{"_index":106,"title":{},"body":{"components/CounterComponent.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"directives/LoadScriptDirectiveDirective.html":{},"components/MainSiteComponent.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{},"miscellaneous/typealiases.html":{}}}],["selectorservice",{"_index":166,"title":{},"body":{"components/CounterComponent.html":{},"components/ShowLightsComponent.html":{}}}],["selectorserviceservice",{"_index":22,"title":{"injectables/SelectorServiceService.html":{}},"body":{"modules/AppModule.html":{},"components/CounterComponent.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selects",{"_index":398,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"miscellaneous/typealiases.html":{}}}],["self",{"_index":383,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["sell",{"_index":868,"title":{},"body":{"index.html":{},"license.html":{}}}],["servconn",{"_index":218,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["service",{"_index":401,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{}}}],["service.service",{"_index":161,"title":{},"body":{"components/CounterComponent.html":{},"components/ShowLightsComponent.html":{}}}],["service.service.ts",{"_index":375,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["service.service.ts:106",{"_index":548,"title":{},"body":{"injectables/SelectorServiceService.html":{}}}],["service.service.ts:135",{"_index":549,"title":{},"body":{"injectables/SelectorServiceService.html":{}}}],["service.service.ts:158",{"_index":553,"title":{},"body":{"injectables/SelectorServiceService.html":{}}}],["service.service.ts:170",{"_index":551,"title":{},"body":{"injectables/SelectorServiceService.html":{}}}],["service.service.ts:195",{"_index":552,"title":{},"body":{"injectables/SelectorServiceService.html":{}}}],["service.service.ts:62",{"_index":555,"title":{},"body":{"injectables/SelectorServiceService.html":{}}}],["service.service.ts:64",{"_index":554,"title":{},"body":{"injectables/SelectorServiceService.html":{}}}],["service.service.ts:67",{"_index":557,"title":{},"body":{"injectables/SelectorServiceService.html":{}}}],["service.service.ts:69",{"_index":556,"title":{},"body":{"injectables/SelectorServiceService.html":{}}}],["service.service.ts:81",{"_index":550,"title":{},"body":{"injectables/SelectorServiceService.html":{}}}],["set",{"_index":190,"title":{},"body":{"components/CounterComponent.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["sets",{"_index":277,"title":{},"body":{"injectables/IobrokerService.html":{},"components/ShowLightsComponent.html":{}}}],["setstate",{"_index":231,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["setstate(id",{"_index":275,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["settimeout(waitconnected",{"_index":347,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["settings",{"_index":194,"title":{},"body":{"components/CounterComponent.html":{}}}],["setupdatestateobjectcontainer",{"_index":547,"title":{},"body":{"injectables/SelectorServiceService.html":{}}}],["setupdatestateobjectcontainer$(id",{"_index":455,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["shall",{"_index":876,"title":{},"body":{"index.html":{},"license.html":{}}}],["share",{"_index":772,"title":{},"body":{"components/TestComponent.html":{}}}],["shiba",{"_index":751,"title":{},"body":{"components/TestComponent.html":{}}}],["show",{"_index":71,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CounterComponent.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{},"index.html":{}}}],["showed",{"_index":665,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["showlights",{"_index":87,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["showlightscomponent",{"_index":17,"title":{"components/ShowLightsComponent.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CounterComponent.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{},"coverage.html":{},"overview.html":{}}}],["showrooms",{"_index":86,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["showroomscomponent",{"_index":18,"title":{"components/ShowRoomsComponent.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CounterComponent.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shows",{"_index":511,"title":{},"body":{"components/MainSiteComponent.html":{},"components/ShowRoomsComponent.html":{}}}],["simple",{"_index":586,"title":{},"body":{"components/ShowLightsComponent.html":{},"index.html":{}}}],["simulate",{"_index":101,"title":{},"body":{"components/CounterComponent.html":{}}}],["site",{"_index":513,"title":{},"body":{"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{}}}],["site'},{'name",{"_index":202,"title":{},"body":{"components/CounterComponent.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["site.component",{"_index":69,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["site.component.css",{"_index":514,"title":{},"body":{"components/MainSiteComponent.html":{}}}],["site.component.html",{"_index":515,"title":{},"body":{"components/MainSiteComponent.html":{}}}],["site.component.ts",{"_index":510,"title":{},"body":{"components/MainSiteComponent.html":{},"coverage.html":{}}}],["site/main",{"_index":68,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MainSiteComponent.html":{},"coverage.html":{}}}],["six",{"_index":756,"title":{},"body":{"components/TestComponent.html":{}}}],["size",{"_index":703,"title":{},"body":{"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["small",{"_index":762,"title":{},"body":{"components/TestComponent.html":{}}}],["smallest",{"_index":755,"title":{},"body":{"components/TestComponent.html":{}}}],["socket",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"injectables/IobrokerService.html":{},"dependencies.html":{}}}],["socket.io",{"_index":288,"title":{},"body":{"injectables/IobrokerService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["socketioconfig",{"_index":295,"title":{},"body":{"injectables/IobrokerService.html":{},"miscellaneous/variables.html":{}}}],["socketiomodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["software",{"_index":853,"title":{},"body":{"index.html":{},"license.html":{}}}],["something",{"_index":395,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["sort",{"_index":593,"title":{},"body":{"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{}}}],["source",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"directives/LoadScriptDirectiveDirective.html":{},"components/MainSiteComponent.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"injectables/StateStoreService.html":{},"components/TestComponent.html":{}}}],["spitz",{"_index":759,"title":{},"body":{"components/TestComponent.html":{}}}],["sprint",{"_index":534,"title":{},"body":{"components/MainSiteComponent.html":{},"index.html":{}}}],["src/.../iobroker.service.ts",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../selector",{"_index":916,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app",{"_index":59,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.module.ts",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/counter/counter.component.ts",{"_index":94,"title":{},"body":{"components/CounterComponent.html":{},"coverage.html":{}}}],["src/app/counter/counter.component.ts:18",{"_index":141,"title":{},"body":{"components/CounterComponent.html":{}}}],["src/app/counter/counter.component.ts:20",{"_index":154,"title":{},"body":{"components/CounterComponent.html":{}}}],["src/app/counter/counter.component.ts:23",{"_index":151,"title":{},"body":{"components/CounterComponent.html":{}}}],["src/app/counter/counter.component.ts:42",{"_index":132,"title":{},"body":{"components/CounterComponent.html":{}}}],["src/app/counter/counter.component.ts:66",{"_index":135,"title":{},"body":{"components/CounterComponent.html":{}}}],["src/app/counter/counter.component.ts:78",{"_index":123,"title":{},"body":{"components/CounterComponent.html":{}}}],["src/app/counter/counter.component.ts:85",{"_index":130,"title":{},"body":{"components/CounterComponent.html":{}}}],["src/app/counter/counter.component.ts:92",{"_index":128,"title":{},"body":{"components/CounterComponent.html":{}}}],["src/app/iobroker.service.ts",{"_index":210,"title":{},"body":{"injectables/IobrokerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/iobroker.service.ts:114",{"_index":256,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["src/app/iobroker.service.ts:124",{"_index":274,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["src/app/iobroker.service.ts:136",{"_index":271,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["src/app/iobroker.service.ts:145",{"_index":266,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["src/app/iobroker.service.ts:165",{"_index":263,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["src/app/iobroker.service.ts:185",{"_index":253,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["src/app/iobroker.service.ts:205",{"_index":250,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["src/app/iobroker.service.ts:225",{"_index":260,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["src/app/iobroker.service.ts:234",{"_index":276,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["src/app/iobroker.service.ts:34",{"_index":286,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["src/app/iobroker.service.ts:37",{"_index":279,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["src/app/iobroker.service.ts:39",{"_index":292,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["src/app/iobroker.service.ts:41",{"_index":291,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["src/app/iobroker.service.ts:43",{"_index":284,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["src/app/iobroker.service.ts:45",{"_index":233,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["src/app/iobroker.service.ts:96",{"_index":259,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["src/app/load",{"_index":491,"title":{},"body":{"directives/LoadScriptDirectiveDirective.html":{},"coverage.html":{}}}],["src/app/main",{"_index":509,"title":{},"body":{"components/MainSiteComponent.html":{},"coverage.html":{}}}],["src/app/selector",{"_index":374,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/show",{"_index":558,"title":{},"body":{"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"coverage.html":{}}}],["src/app/state",{"_index":705,"title":{},"body":{"injectables/StateStoreService.html":{},"coverage.html":{}}}],["src/app/test/test.component.ts",{"_index":742,"title":{},"body":{"components/TestComponent.html":{},"coverage.html":{}}}],["sss.init",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["started",{"_index":821,"title":{"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":137,"title":{},"body":{"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"components/MainSiteComponent.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"injectables/StateStoreService.html":{}}}],["state/object",{"_index":441,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["statecontainer",{"_index":444,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["statecontainer.ioobject",{"_index":447,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["statecontainer.iostate",{"_index":446,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["statecontainer.stateobjectcontainer",{"_index":451,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["statecontainer.stateobjectcontainer$.next([statecontainer.iostate",{"_index":450,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["stateio",{"_index":418,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"components/MainSiteComponent.html":{},"injectables/SelectorServiceService.html":{},"injectables/StateStoreService.html":{}}}],["statements",{"_index":784,"title":{},"body":{"coverage.html":{}}}],["stateobject",{"_index":393,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["stateobjectconainer",{"_index":387,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["stateobjectcontainer",{"_index":147,"title":{},"body":{"components/CounterComponent.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{}}}],["stateobjectcontainer.id",{"_index":148,"title":{},"body":{"components/CounterComponent.html":{}}}],["stateobjectcontainer.ioobject",{"_index":597,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["stateobjectcontainer.ioobject['common",{"_index":600,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["stateobjectcontainer.ioobject['common']['role",{"_index":601,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["stateobjectcontainer.stateobjectcontainer$.subscribe(([iostate",{"_index":173,"title":{},"body":{"components/CounterComponent.html":{},"components/ShowLightsComponent.html":{}}}],["stateobjectcontainer:istateobjectcontainer",{"_index":145,"title":{},"body":{"components/CounterComponent.html":{}}}],["stateobjectcontainermap",{"_index":386,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["stateobjectcontainers",{"_index":606,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["stateobjectcontainerswith",{"_index":608,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["states",{"_index":267,"title":{},"body":{"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"injectables/StateStoreService.html":{},"index.html":{}}}],["states/object",{"_index":474,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["states[id",{"_index":433,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["statescontainers",{"_index":403,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["statestoreservice",{"_index":50,"title":{"injectables/StateStoreService.html":{}},"body":{"modules/AppModule.html":{},"components/MainSiteComponent.html":{},"components/ShowRoomsComponent.html":{},"injectables/StateStoreService.html":{},"coverage.html":{}}}],["status",{"_index":644,"title":{},"body":{"components/ShowLightsComponent.html":{},"index.html":{}}}],["still",{"_index":679,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["sting",{"_index":623,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["store",{"_index":390,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["store.service",{"_index":516,"title":{},"body":{"components/MainSiteComponent.html":{},"components/ShowRoomsComponent.html":{}}}],["store.service.ts",{"_index":706,"title":{},"body":{"injectables/StateStoreService.html":{},"coverage.html":{}}}],["storeobjectmap",{"_index":411,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["storestatemap",{"_index":543,"title":{},"body":{"injectables/SelectorServiceService.html":{},"injectables/StateStoreService.html":{}}}],["string",{"_index":369,"title":{},"body":{"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"components/MainSiteComponent.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"injectables/StateStoreService.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":91,"title":{},"body":{"components/CounterComponent.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["styleurls",{"_index":108,"title":{},"body":{"components/CounterComponent.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["subject",{"_index":258,"title":{},"body":{"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"injectables/StateStoreService.html":{},"index.html":{},"license.html":{}}}],["sublicense",{"_index":866,"title":{},"body":{"index.html":{},"license.html":{}}}],["subscribe(([id",{"_index":417,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"components/MainSiteComponent.html":{},"injectables/SelectorServiceService.html":{},"injectables/StateStoreService.html":{}}}],["subscribe((config",{"_index":529,"title":{},"body":{"components/MainSiteComponent.html":{}}}],["subscribe((err",{"_index":533,"title":{},"body":{"components/MainSiteComponent.html":{}}}],["subscribe((isconnected",{"_index":527,"title":{},"body":{"components/MainSiteComponent.html":{}}}],["subscribe(hostname",{"_index":524,"title":{},"body":{"components/MainSiteComponent.html":{}}}],["subscribes",{"_index":414,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["substantial",{"_index":878,"title":{},"body":{"index.html":{},"license.html":{}}}],["support",{"_index":906,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":907,"title":{},"body":{"modules.html":{}}}],["swissglider",{"_index":843,"title":{},"body":{"index.html":{},"license.html":{}}}],["swissglider@github.com",{"_index":844,"title":{},"body":{"index.html":{},"license.html":{}}}],["switch",{"_index":578,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["switch.light",{"_index":602,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["switch.lights",{"_index":609,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["table",{"_index":693,"title":{},"body":{"components/ShowRoomsComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":793,"title":{},"body":{"coverage.html":{}}}],["temp",{"_index":831,"title":{},"body":{"index.html":{}}}],["tempenumsob",{"_index":731,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["template",{"_index":90,"title":{},"body":{"components/CounterComponent.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["templateurl",{"_index":110,"title":{},"body":{"components/CounterComponent.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["tempobjectsob",{"_index":724,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["tempstateob",{"_index":718,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["terrain",{"_index":768,"title":{},"body":{"components/TestComponent.html":{}}}],["test",{"_index":85,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CounterComponent.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["test.component.css",{"_index":743,"title":{},"body":{"components/TestComponent.html":{}}}],["test.component.html",{"_index":744,"title":{},"body":{"components/TestComponent.html":{}}}],["test/test.component",{"_index":70,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["testcomponent",{"_index":19,"title":{"components/TestComponent.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CounterComponent.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tests",{"_index":823,"title":{},"body":{"index.html":{}}}],["text/javascript",{"_index":503,"title":{},"body":{"directives/LoadScriptDirectiveDirective.html":{}}}],["th",{"_index":378,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["this.addallstateobjects",{"_index":412,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["this.addstateobjecttocontainer(id",{"_index":420,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["this.checkstateupdate",{"_index":413,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["this.configobs",{"_index":740,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["this.configobs$.next(data",{"_index":738,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["this.counter",{"_index":180,"title":{},"body":{"components/CounterComponent.html":{}}}],["this.counter+1",{"_index":188,"title":{},"body":{"components/CounterComponent.html":{}}}],["this.counterselectorfn",{"_index":170,"title":{},"body":{"components/CounterComponent.html":{}}}],["this.createupdateselectionmap(id",{"_index":458,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["this.enummap",{"_index":741,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["this.enummap$.next(this.storeenummap",{"_index":735,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["this.getinitinformations",{"_index":519,"title":{},"body":{"components/MainSiteComponent.html":{}}}],["this.getnewcounter",{"_index":168,"title":{},"body":{"components/CounterComponent.html":{}}}],["this.getnewerror",{"_index":521,"title":{},"body":{"components/MainSiteComponent.html":{}}}],["this.getupdatedstate",{"_index":520,"title":{},"body":{"components/MainSiteComponent.html":{}}}],["this.hostname",{"_index":525,"title":{},"body":{"components/MainSiteComponent.html":{}}}],["this.initalllights",{"_index":616,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["this.iobrokerservice.getconfig",{"_index":737,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["this.iobrokerservice.getenums",{"_index":728,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["this.iobrokerservice.getisconnected",{"_index":526,"title":{},"body":{"components/MainSiteComponent.html":{}}}],["this.iobrokerservice.getlivehost",{"_index":523,"title":{},"body":{"components/MainSiteComponent.html":{}}}],["this.iobrokerservice.getnewerror",{"_index":532,"title":{},"body":{"components/MainSiteComponent.html":{}}}],["this.iobrokerservice.getobjects",{"_index":722,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["this.iobrokerservice.getobjects().catch((err",{"_index":434,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["this.iobrokerservice.getstates(null",{"_index":432,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"injectables/StateStoreService.html":{}}}],["this.iobrokerservice.getupdatedobject",{"_index":422,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"injectables/StateStoreService.html":{}}}],["this.iobrokerservice.getupdatedstate",{"_index":416,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"components/MainSiteComponent.html":{},"injectables/SelectorServiceService.html":{},"injectables/StateStoreService.html":{}}}],["this.iobrokerservice.setstate('javascript.0.counterchannel.counterdevice.counter",{"_index":187,"title":{},"body":{"components/CounterComponent.html":{}}}],["this.iobrokerservice.setstate(id",{"_index":642,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["this.isconnected",{"_index":353,"title":{},"body":{"injectables/IobrokerService.html":{},"components/MainSiteComponent.html":{}}}],["this.isconnected$.next(isconnected",{"_index":331,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["this.lightsarray",{"_index":630,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["this.lightsarray.findindex(e",{"_index":635,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["this.lightsarray.push({id:id",{"_index":638,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["this.lightsarray[index",{"_index":639,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["this.lightselectorfn",{"_index":618,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["this.livehost",{"_index":351,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["this.livehost$.next(hostname",{"_index":350,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["this.loadallconfigintoobservermap",{"_index":715,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["this.loadallenumsintoobservermap",{"_index":714,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["this.loadallobjectsintoobservermap",{"_index":713,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["this.loadallstatesintoobservermap",{"_index":709,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["this.new_enums.push",{"_index":674,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["this.newcounter",{"_index":181,"title":{},"body":{"components/CounterComponent.html":{}}}],["this.newerror",{"_index":368,"title":{},"body":{"injectables/IobrokerService.html":{},"components/MainSiteComponent.html":{}}}],["this.newerror$.next(err",{"_index":341,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["this.observersperselectionmap",{"_index":488,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["this.param",{"_index":501,"title":{},"body":{"directives/LoadScriptDirectiveDirective.html":{}}}],["this.selectionmap.foreach((selection",{"_index":456,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["this.selectionmap.get(name",{"_index":482,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["this.selectionmap.set(name",{"_index":490,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["this.selectorservice.getselector('alllightsselector",{"_index":617,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["this.selectorservice.getselector('counterselector",{"_index":169,"title":{},"body":{"components/CounterComponent.html":{}}}],["this.servconn",{"_index":325,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["this.servconn.getconfig((err",{"_index":367,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["this.servconn.getenums",{"_index":366,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["this.servconn.getisconnected",{"_index":346,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["this.servconn.getlivehost((hostname",{"_index":349,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["this.servconn.getobjects((err",{"_index":365,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["this.servconn.getstates(ids",{"_index":362,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["this.servconn.init",{"_index":328,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["this.servconn.setstate(id",{"_index":370,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["this.setupdatestateobjectcontainer$(id",{"_index":421,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["this.socket",{"_index":327,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["this.socket.fromevent('connect",{"_index":354,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["this.socket.on('statechange",{"_index":357,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["this.stateobjectcontainermap.foreach((stateobjectcontainer",{"_index":484,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["this.stateobjectcontainermap.get(id",{"_index":445,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["this.stateobjectcontainermap.has(id",{"_index":443,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["this.stateobjectcontainermap.set(id",{"_index":453,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["this.statestoreservice.getconfig",{"_index":528,"title":{},"body":{"components/MainSiteComponent.html":{}}}],["this.statestoreservice.getenums().subscribe((enums",{"_index":669,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["this.storeenummap.get(id).next(enumio",{"_index":734,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["this.storeenummap.has(id",{"_index":730,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["this.storeenummap.set(id",{"_index":733,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["this.storeobjectmap.get(id",{"_index":449,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["this.storeobjectmap.get(id).next(objectio",{"_index":726,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["this.storeobjectmap.has(id",{"_index":448,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"injectables/StateStoreService.html":{}}}],["this.storeobjectmap.set(id",{"_index":436,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"injectables/StateStoreService.html":{}}}],["this.storestatemap.foreach((stateio",{"_index":438,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["this.storestatemap.get(id",{"_index":425,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"injectables/StateStoreService.html":{}}}],["this.storestatemap.get(id).next(stateio",{"_index":720,"title":{},"body":{"injectables/StateStoreService.html":{}}}],["this.storestatemap.has(id",{"_index":424,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"injectables/StateStoreService.html":{}}}],["this.storestatemap.set(id",{"_index":419,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"injectables/StateStoreService.html":{}}}],["this.updatedobject",{"_index":359,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["this.updatedobject$.next([id",{"_index":330,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["this.updatedstate",{"_index":355,"title":{},"body":{"injectables/IobrokerService.html":{},"components/MainSiteComponent.html":{}}}],["this.updatedstate$.next([id",{"_index":332,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["this.updatedstateid",{"_index":530,"title":{},"body":{"components/MainSiteComponent.html":{}}}],["this.updatelightarray(id",{"_index":622,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["this.updatelightarray(ioobject['_id",{"_index":621,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["this.updatelightarray(new_id",{"_index":588,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["till",{"_index":243,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["tort",{"_index":902,"title":{},"body":{"index.html":{},"license.html":{}}}],["transports",{"_index":319,"title":{},"body":{"injectables/IobrokerService.html":{},"miscellaneous/variables.html":{}}}],["tree",{"_index":93,"title":{},"body":{"components/CounterComponent.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["true",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"miscellaneous/variables.html":{}}}],["tselectionfn",{"_index":142,"title":{},"body":{"components/CounterComponent.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tslib",{"_index":816,"title":{},"body":{"dependencies.html":{}}}],["tstateobjectcontainermap",{"_index":159,"title":{},"body":{"components/CounterComponent.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"miscellaneous/typealiases.html":{}}}],["type",{"_index":139,"title":{},"body":{"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":914,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":179,"title":{},"body":{"components/CounterComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{}}}],["update",{"_index":134,"title":{},"body":{"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"components/ShowRoomsComponent.html":{},"injectables/StateStoreService.html":{}}}],["updated",{"_index":460,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"components/MainSiteComponent.html":{},"injectables/SelectorServiceService.html":{}}}],["updatedobject",{"_index":219,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["updatedstate",{"_index":220,"title":{},"body":{"injectables/IobrokerService.html":{},"components/MainSiteComponent.html":{}}}],["updatedstateid",{"_index":518,"title":{},"body":{"components/MainSiteComponent.html":{}}}],["updatedstateid}}state",{"_index":542,"title":{},"body":{"components/MainSiteComponent.html":{}}}],["updatelightarray",{"_index":571,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["updatelightarray(id",{"_index":579,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["updatelightarray(id:string",{"_index":624,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["updates",{"_index":273,"title":{},"body":{"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{}}}],["updatlightarray",{"_index":574,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["url",{"_index":303,"title":{},"body":{"injectables/IobrokerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["url('https://cdn3.iconfinder.com/data/icons/files",{"_index":699,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["url('https://material.angular.io/assets/img/examples/shiba1.jpg",{"_index":780,"title":{},"body":{"components/TestComponent.html":{}}}],["use",{"_index":861,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":156,"title":{},"body":{"components/CounterComponent.html":{},"injectables/StateStoreService.html":{}}}],["user",{"_index":305,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["users",{"_index":647,"title":{},"body":{"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{}}}],["uses",{"_index":97,"title":{},"body":{"components/CounterComponent.html":{}}}],["utf",{"_index":506,"title":{},"body":{"directives/LoadScriptDirectiveDirective.html":{}}}],["util",{"_index":613,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["val",{"_index":176,"title":{},"body":{"components/CounterComponent.html":{},"components/ShowLightsComponent.html":{}}}],["value",{"_index":144,"title":{},"body":{"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"injectables/StateStoreService.html":{},"miscellaneous/variables.html":{}}}],["value$.subscribe((enum_",{"_index":672,"title":{},"body":{"components/ShowRoomsComponent.html":{}}}],["value:boolean",{"_index":641,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["values",{"_index":745,"title":{},"body":{"components/TestComponent.html":{}}}],["var",{"_index":198,"title":{},"body":{"components/CounterComponent.html":{},"components/MainSiteComponent.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["variable",{"_index":787,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":917,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":536,"title":{},"body":{"components/MainSiteComponent.html":{},"index.html":{}}}],["versiondetailslivehost",{"_index":538,"title":{},"body":{"components/MainSiteComponent.html":{}}}],["very",{"_index":765,"title":{},"body":{"components/TestComponent.html":{}}}],["void",{"_index":127,"title":{},"body":{"components/CounterComponent.html":{},"injectables/IobrokerService.html":{},"components/MainSiteComponent.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{}}}],["waitconnected",{"_index":345,"title":{},"body":{"injectables/IobrokerService.html":{}}}],["warranties",{"_index":886,"title":{},"body":{"index.html":{},"license.html":{}}}],["warranty",{"_index":881,"title":{},"body":{"index.html":{},"license.html":{}}}],["web",{"_index":594,"title":{},"body":{"components/ShowLightsComponent.html":{},"components/ShowRoomsComponent.html":{}}}],["webcomponents/custom",{"_index":808,"title":{},"body":{"dependencies.html":{}}}],["websocket",{"_index":320,"title":{},"body":{"injectables/IobrokerService.html":{},"miscellaneous/variables.html":{}}}],["well",{"_index":766,"title":{},"body":{"components/TestComponent.html":{}}}],["whether",{"_index":899,"title":{},"body":{"index.html":{},"license.html":{}}}],["whole",{"_index":380,"title":{},"body":{"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{}}}],["wholemap",{"_index":183,"title":{},"body":{"components/CounterComponent.html":{},"interfaces/Iselection.html":{},"interfaces/IstateObjectContainer.html":{},"injectables/SelectorServiceService.html":{},"components/ShowLightsComponent.html":{}}}],["width",{"_index":694,"title":{},"body":{"components/ShowRoomsComponent.html":{},"components/TestComponent.html":{}}}],["wind",{"_index":835,"title":{},"body":{"index.html":{}}}],["within",{"_index":562,"title":{},"body":{"components/ShowLightsComponent.html":{}}}],["without",{"_index":856,"title":{},"body":{"index.html":{},"license.html":{}}}],["zone.js",{"_index":818,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nCounterComponent\n\nCounterComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCounterComponent->AppModule\n\n\n\n\n\nLoadScriptDirectiveDirective\n\nLoadScriptDirectiveDirective\n\nAppModule -->\n\nLoadScriptDirectiveDirective->AppModule\n\n\n\n\n\nMainSiteComponent\n\nMainSiteComponent\n\nAppModule -->\n\nMainSiteComponent->AppModule\n\n\n\n\n\nShowLightsComponent\n\nShowLightsComponent\n\nAppModule -->\n\nShowLightsComponent->AppModule\n\n\n\n\n\nShowRoomsComponent\n\nShowRoomsComponent\n\nAppModule -->\n\nShowRoomsComponent->AppModule\n\n\n\n\n\nTestComponent\n\nTestComponent\n\nAppModule -->\n\nTestComponent->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nIobrokerService\n\nIobrokerService\n\nAppModule -->\n\nIobrokerService->AppModule\n\n\n\n\n\nSelectorServiceService\n\nSelectorServiceService\n\nAppModule -->\n\nSelectorServiceService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CounterComponent\n                        \n                        \n                            LoadScriptDirectiveDirective\n                        \n                        \n                            MainSiteComponent\n                        \n                        \n                            ShowLightsComponent\n                        \n                        \n                            ShowRoomsComponent\n                        \n                        \n                            TestComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            IobrokerService\n                        \n                        \n                            SelectorServiceService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SocketIoModule } from 'ngx-socket-io';\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { FormsModule } from '@angular/forms'; //  function() {return sss.init()},\n    //   deps: [StateStoreService],\n    //   multi: true,\n    // }\n    IobrokerService,\n    SelectorServiceService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { CounterComponent } from './counter/counter.component';\nimport { MainSiteComponent } from './main-site/main-site.component';\nimport { TestComponent } from './test/test.component';\nimport { ShowRoomsComponent } from './show-rooms/show-rooms.component';\nimport { ShowLightsComponent } from './show-lights/show-lights.component';\n\nconst routes: Routes = [\n  { path:  '', redirectTo:  'mainsite', pathMatch:  'full' },\n  { path: 'hompage', component: HomepageComponent},\n  { path: 'counter', component: CounterComponent},\n  { path: 'mainsite', component: MainSiteComponent},\n  { path: 'test', component: TestComponent},\n  { path: 'showrooms', component: ShowRoomsComponent},\n  { path: 'showlights', component: ShowLightsComponent},\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { } \n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CounterComponent.html":{"url":"components/CounterComponent.html","title":"component - CounterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CounterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/counter/counter.component.ts\n\n\n    \n        Description\n    \n    \n        Counter Example that uses the following ioBroker id to simulate:\n'javascript.0.CounterChannel.CounterDevice.Counte'\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-counter\n            \n\n            \n                styleUrls\n                ./counter.component.css\n            \n\n\n\n            \n                templateUrl\n                ./counter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                counter\n                            \n                            \n                                counterSelectorFN\n                            \n                            \n                                newCounter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                counterDecrement\n                            \n                            \n                                counterIncrement\n                            \n                            \n                                counterReset\n                            \n                            \n                                getNewCounter\n                            \n                            \n                                onChangeCounter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            counterDecrement\n                        \n                        \n                    \n                \n            \n            \n                \ncounterDecrement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/counter/counter.component.ts:78\n                \n            \n\n\n            \n                \n                    decrement the counter with -1 on ioBroker \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            counterIncrement\n                        \n                        \n                    \n                \n            \n            \n                \ncounterIncrement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/counter/counter.component.ts:92\n                \n            \n\n\n            \n                \n                    increment the counter with +1 on ioBroker \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            counterReset\n                        \n                        \n                    \n                \n            \n            \n                \ncounterReset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/counter/counter.component.ts:85\n                \n            \n\n\n            \n                \n                    reset the counter to 0 on ioBroker \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNewCounter\n                        \n                        \n                    \n                \n            \n            \n                \ngetNewCounter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/counter/counter.component.ts:42\n                \n            \n\n\n            \n                \n                    init and update the counter from ioBroker \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChangeCounter\n                        \n                        \n                    \n                \n            \n            \n                \nonChangeCounter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/counter/counter.component.ts:66\n                \n            \n\n\n            \n                \n                    changes the ioBroker state with the new_counter\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/counter/counter.component.ts:18\n                            \n                        \n\n                \n                    \n                        counter number \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counterSelectorFN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TselectionFN\n\n                        \n                    \n                    \n                        \n                            Default value : ((stateObjectContainer:IstateObjectContainer) => {\n    if(stateObjectContainer && 'id' in stateObjectContainer){\n      return stateObjectContainer.id === 'javascript.0.CounterChannel.CounterDevice.Counter';\n    }\n    return false;\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/counter/counter.component.ts:23\n                            \n                        \n\n                \n                    \n                        selection function to select only the counter id \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newCounter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/counter/counter.component.ts:20\n                            \n                        \n\n                \n                    \n                        new counter only used for new Input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { IobrokerService } from '../iobroker.service';\nimport { SelectorServiceService, TselectionFN, TstateObjectContainerMap, IstateObjectContainer } from '../selector-service.service';\n\n/**\n * Counter Example that uses the following ioBroker id to simulate:\n * 'javascript.0.CounterChannel.CounterDevice.Counte'\n */\n@Component({\n  selector: 'app-counter',\n  templateUrl: './counter.component.html',\n  styleUrls: ['./counter.component.css']\n})\nexport class CounterComponent implements OnInit {\n\n  /** counter number */\n  counter: number;\n  /** new counter only used for new Input */\n  newCounter: number;\n\n  /** selection function to select only the counter id */\n  counterSelectorFN:TselectionFN = ((stateObjectContainer:IstateObjectContainer) => {\n    if(stateObjectContainer && 'id' in stateObjectContainer){\n      return stateObjectContainer.id === 'javascript.0.CounterChannel.CounterDevice.Counter';\n    }\n    return false;\n  });\n\n  /** @ignore */\n  constructor(\n    private iobrokerService: IobrokerService,\n    private selectorService: SelectorServiceService\n  ) {}\n\n  /** @ignore */\n  ngOnInit() {\n    this.getNewCounter();\n  }\n\n  /** init and update the counter from ioBroker */\n  getNewCounter(): void {\n    let selection = this.selectorService.getSelector('counterSelector', this.counterSelectorFN);\n    selection.mapChangeObserver$.subscribe((stateObjectContainer) => {\n      if(stateObjectContainer === null) {return}\n      stateObjectContainer.stateObjectContainer$.subscribe(([ioState, ioObject]) => {\n        if(ioState && 'val' in ioState && ioState['val'] !== null && typeof ioState['val'] === 'number') {\n          this.counter = ioState['val'];\n          this.newCounter = ioState['val'];\n        }\n      })\n    });\n    selection.stateObjectContainerMap.forEach((stateObjectContainer, id, wholeMap) => {\n      stateObjectContainer.stateObjectContainer$.subscribe(([ioState, ioObject]) => {\n        if(ioState && 'val' in ioState && ioState['val'] !== null  && typeof ioState['val'] === 'number') {\n          this.counter = ioState['val'];\n          this.newCounter = ioState['val'];\n        }\n      })\n    })\n  }\n\n  /**\n   * changes the ioBroker state with the new_counter\n   */\n  onChangeCounter(): void {\n    if(typeof this.newCounter !== 'number'){\n      this.newCounter = Number.parseInt(this.newCounter);\n      if(isNaN(this.newCounter)){\n        return;\n      }\n    }\n    this.counter = this.newCounter;\n    this.iobrokerService.setState('javascript.0.CounterChannel.CounterDevice.Counter', this.newCounter);\n  }\n\n  /** decrement the counter with -1 on ioBroker */\n  counterDecrement(): void {\n    this.counter = this.counter-1;\n    this.newCounter = this.counter\n    this.iobrokerService.setState('javascript.0.CounterChannel.CounterDevice.Counter', this.counter);\n  }\n\n  /** reset the counter to 0 on ioBroker */\n  counterReset(): void {\n    this.counter = 0;\n    this.newCounter = this.counter\n    this.iobrokerService.setState('javascript.0.CounterChannel.CounterDevice.Counter', this.counter);\n  }\n\n  /** increment the counter with +1 on ioBroker */\n  counterIncrement(): void {\n    this.counter = this.counter+1;\n    this.newCounter = this.counter\n    this.iobrokerService.setState('javascript.0.CounterChannel.CounterDevice.Counter', this.counter);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        Counter\n      \n      \n        ioBroker Counter\n        \n        \n          Count =  {{counter}}\n        \n        \n          Counter\n          \n          Set the Counter and enter\n          This field is required!\n        \n      \n      \n        \n          \n            \n            Settings\n          \n          \n            \n            Settings\n          \n          \n            \n            Settings\n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./counter.component.css\n                \n                  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Counter                    ioBroker Counter                          Count =  {{counter}}                          Counter                    Set the Counter and enter          This field is required!                                                              Settings                                            Settings                                            Settings                              '\n    var COMPONENTS = [{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'MainSiteComponent', 'selector': 'app-main-site'},{'name': 'ShowLightsComponent', 'selector': 'app-show-lights'},{'name': 'ShowRoomsComponent', 'selector': 'app-show-rooms'},{'name': 'TestComponent', 'selector': 'app-test'}];\n    var DIRECTIVES = [{'name': 'LoadScriptDirectiveDirective', 'selector': '[appLoadScript]'}];\n    var ACTUAL_COMPONENT = {'name': 'CounterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IobrokerService.html":{"url":"injectables/IobrokerService.html","title":"injectable - IobrokerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IobrokerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/iobroker.service.ts\n        \n\n            \n                Description\n            \n            \n                Handels the connection to the ioBroker with help of the /lib/ioBrokerConnection.ts\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isConnected$\n                            \n                            \n                                    Private\n                                liveHost$\n                            \n                            \n                                    Private\n                                newError$\n                            \n                            \n                                    Private\n                                servConn\n                            \n                            \n                                    Private\n                                updatedObject$\n                            \n                            \n                                    Private\n                                updatedState$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getConfig\n                            \n                            \n                                    Public\n                                getEnums\n                            \n                            \n                                    Public\n                                getIsConnected\n                            \n                            \n                                    Public\n                                getLiveHost\n                            \n                            \n                                    Public\n                                getNewError\n                            \n                            \n                                    Public\n                                getObjects\n                            \n                            \n                                    Public\n                                getStates\n                            \n                            \n                                    Public\n                                getUpdatedObject\n                            \n                            \n                                    Public\n                                getUpdatedState\n                            \n                            \n                                    Public\n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(socket: Socket)\n                    \n                \n                        \n                            \n                                Defined in src/app/iobroker.service.ts:45\n                            \n                        \n\n                \n                    \n                            init ioBroker connection and listen to some emit callbacks \n\nonObjectChange\nonConnChange\nonStateChange\nonRefresh (only console log till now)\nonAuth (only console log till now)\nonCommand (only console log till now)\nonError\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        socket\n                                                  \n                                                        \n                                                                    Socket\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/app/iobroker.service.ts:205\n                \n            \n\n\n            \n                \n                    Returns all configs as Promise\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        with ioBroker configs\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEnums\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEnums()\n                \n            \n\n\n            \n                \n                    Defined in src/app/iobroker.service.ts:185\n                \n            \n\n\n            \n                \n                    Returns all enums as Promise\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        enum]>} with ioBroker enums\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getIsConnected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getIsConnected()\n                \n            \n\n\n            \n                \n                    Defined in src/app/iobroker.service.ts:114\n                \n            \n\n\n            \n                \n                    get connection state observer\n\n\n                    \n                    \n                    \n                        Returns :     Subject\n\n                    \n                    \n                        isConnected\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getLiveHost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLiveHost()\n                \n            \n\n\n            \n                \n                    Defined in src/app/iobroker.service.ts:96\n                \n            \n\n\n            \n                \n                    Returns the liveHost Name as Observer\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        liveHost\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getNewError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/iobroker.service.ts:225\n                \n            \n\n\n            \n                \n                    Returns Error Message Observer\n\n\n                    \n                    \n                    \n                        Returns :     Subject\n\n                    \n                    \n                        error Message\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getObjects\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getObjects()\n                \n            \n\n\n            \n                \n                    Defined in src/app/iobroker.service.ts:165\n                \n            \n\n\n            \n                \n                    Returns all objects as Promise\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        with ioBroker objects\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStates(ids)\n                \n            \n\n\n            \n                \n                    Defined in src/app/iobroker.service.ts:145\n                \n            \n\n\n            \n                \n                    Returns all states fits the ids filter as Promise\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ids\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ioBroker id filter\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        with ioBroker states\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUpdatedObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUpdatedObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/iobroker.service.ts:136\n                \n            \n\n\n            \n                \n                    Get an observer for ioBroker object update\n\n\n                    \n                    \n                    \n                        Returns :     Subject<>\n\n                    \n                    \n                        all object updates\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUpdatedState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUpdatedState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/iobroker.service.ts:124\n                \n            \n\n\n            \n                \n                    Get an observer for ioBroker state update\n\n\n                    \n                    \n                    \n                        Returns :     Subject<>\n\n                    \n                    \n                        all state updates\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setState(id, value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/iobroker.service.ts:234\n                \n            \n\n\n            \n                \n                    Sets a ioBroker state\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ioBroker id\n\n                                    \n                                \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new value for the ioBroker id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isConnected$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/iobroker.service.ts:37\n                            \n                        \n\n                \n                    \n                        observer if the connection is established \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            liveHost$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject('')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/iobroker.service.ts:45\n                            \n                        \n\n                \n                    \n                        current liveHost observer \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            newError$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/iobroker.service.ts:43\n                            \n                        \n\n                \n                    \n                        current error observer \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            servConn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IOBrokerConnection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/iobroker.service.ts:34\n                            \n                        \n\n                \n                    \n                        connection to ioBroker --> see ioBroker socket.io adapter \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updatedObject$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject<>\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject([null, null])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/iobroker.service.ts:41\n                            \n                        \n\n                \n                    \n                        current object observer \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updatedState$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject<>\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject([null, null])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/iobroker.service.ts:39\n                            \n                        \n\n                \n                    \n                        current states observer \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject, BehaviorSubject, of } from 'rxjs';\nimport { bindCallback} from 'rxjs';\nimport { Socket, SocketIoConfig } from 'ngx-socket-io';\nimport { map } from 'rxjs/operators';\n\nimport {IOBrokerConnection} from '../lib/ioBrokerConnection';\nimport { Identifiers } from '@angular/compiler';\n\n/** ioBroker adapter namespace */\nconst namespace = 'homeOverview.0';\n/** ioBroker url */\nconst url = 'http://192.168.90.1:8082'; // user in app.module to connect the socket\n/** socket.io connection configuration */\nexport const config: SocketIoConfig = { url, options: {\n  query:                          'key=',\n  reconnectionDelay:              10000,\n  reconnectionAttempts:           Infinity,\n  reconnection:                   true,\n  forceNew:                       true,\n  transports:                     ['websocket']\n} };\n\n/**\n * Handels the connection to the ioBroker with help of the /lib/ioBrokerConnection.ts\n */\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class IobrokerService {\n\n  /** connection to ioBroker --> see ioBroker socket.io adapter */\n  private servConn: IOBrokerConnection;\n\n  /** observer if the connection is established */\n  private isConnected$: Subject = new BehaviorSubject(false);\n  /** current states observer */\n  private updatedState$: Subject = new BehaviorSubject([null, null]);\n  /** current object observer */\n  private updatedObject$: Subject = new BehaviorSubject([null, null]);\n  /** current error observer */\n  private newError$: Subject = new BehaviorSubject(null);\n  /** current liveHost observer */\n  private liveHost$: Subject = new BehaviorSubject('');\n\n  /**\n   * init ioBroker connection and listen to some emit callbacks \n   *  - onObjectChange\n   *  - onConnChange\n   *  - onStateChange\n   *  - onRefresh (only console log till now)\n   *  - onAuth (only console log till now)\n   *  - onCommand (only console log till now)\n   *  - onError\n   * @param socket \n   */\n  constructor(private socket: Socket) {\n    this.servConn = new IOBrokerConnection(namespace, this.socket);\n    this.servConn.init({\n      onObjectChange: (id, obj)=> {\n        this.updatedObject$.next([id, obj]);\n      },\n      onConnChange: (isConnected) => {\n        this.isConnected$.next(isConnected);\n      },\n      onStateChange: (id, state) => {\n        this.updatedState$.next([id, state]);\n      },\n      onRefresh: () => {\n        console.log('ioBrokerConnection:onRefresh');\n      },\n      onAuth: () => {\n        console.log('ioBrokerConnection:onAuth');\n      },\n      onCommand: (instance, command, data) => {\n        console.log('ioBrokerConnection:onCommand');\n      },\n      onError: (err) => {\n        console.error('ioBrokerConnection:onError');\n        this.newError$.next(err);\n      },\n    }, true);\n  }\n\n  /** @ignore */\n  public getObjectTree(): Subject  {\n    console.log('Service: getObjectTree');\n    return new BehaviorSubject('ioBroker');\n  }\n\n  /**\n   * Returns the liveHost Name as Observer\n   * @returns {Observer} liveHost\n   */\n  public getLiveHost(){\n    const waitConnected = () => {\n      if (!this.servConn.getIsConnected()) {\n        setTimeout(waitConnected, 50);\n      } else {\n        this.servConn.getLiveHost((hostName) => {\n          this.liveHost$.next(hostName);\n        })\n      }\n    };\n    waitConnected();\n    return this.liveHost$;\n  }\n\n  /**\n   * get connection state observer\n   * @returns {Observer} isConnected\n   */\n  public getIsConnected(): Subject  {\n    // console.log(this.result1);\n    return this.isConnected$;\n    // return this.socket.fromEvent('connect');\n  }\n\n  /**\n   * Get an observer for ioBroker state update\n   * @returns {Observer } all state updates\n   */\n  public getUpdatedState(): Subject  {\n    return this.updatedState$;\n    // return new Observable(observer => {\n    //   this.socket.on('stateChange', (id, state) => observer.next([id, state]));\n    // });\n\n  }\n\n  /**\n   * Get an observer for ioBroker object update\n   * @returns {Observer } all object updates\n   */\n  public getUpdatedObject(): Subject  {\n    return this.updatedObject$;\n  }\n\n  /**\n   * Returns all states fits the ids filter as Promise\n   * @param ids ioBroker id filter\n   * @returns {Promise} with ioBroker states\n   */\n  public getStates(ids) {\n    return new Promise((resolve, reject) => {\n      const waitConnected = () => {\n        if (!this.servConn.getIsConnected()) {\n          setTimeout(waitConnected, 50);\n        } else {\n          this.servConn.getStates(ids, (err, data) => {\n            if (err) { reject(err); }\n            resolve(data);\n          });\n        }\n      };\n      waitConnected();\n    });\n  }\n\n  /**\n   * Returns all objects as Promise\n   * @returns {Promise} with ioBroker objects\n   */\n  public getObjects() {\n    return new Promise((resolve, reject) => {\n      const waitConnected = () => {\n        if (!this.servConn.getIsConnected()) {\n          setTimeout(waitConnected, 50);\n        } else {\n          this.servConn.getObjects((err, data) => {\n            if (err) { reject(err); }\n            resolve(data);\n          });\n        }\n      };\n      waitConnected();\n    });\n  }\n\n  /**\n   * Returns all enums as Promise\n   * @returns {Promise} with ioBroker enums\n   */\n  public getEnums() {\n    return new Promise((resolve, reject) => {\n      const waitConnected = () => {\n        if (!this.servConn.getIsConnected()) {\n          setTimeout(waitConnected, 50);\n        } else {\n          this.servConn.getEnums('', (err, data) => {\n            if (err) { reject(err); }\n            resolve(data);\n          });\n        }\n      };\n      waitConnected();\n    });\n  }\n\n  /**\n   * Returns all configs as Promise\n   * @returns {Promise} with ioBroker configs\n   */\n  public getConfig() {\n    return new Promise((resolve, reject) => {\n      const waitConnected = () => {\n        if (!this.servConn.getIsConnected()) {\n          setTimeout(waitConnected, 50);\n        } else {\n          this.servConn.getConfig((err, data) => {\n            if (err) { reject(err); }\n            resolve(data);\n          });\n        }\n      };\n      waitConnected();\n    });\n  }\n\n  /**\n   * Returns Error Message Observer\n   * @returns {Observer} error Message\n   */\n  public getNewError(): Subject  {\n    return this.newError$;\n  }\n\n  /**\n   * Sets a ioBroker state\n   * @param {string} id ioBroker id\n   * @param {any} value new value for the ioBroker id\n   */\n  public setState(id, value): void {\n    this.servConn.setState(id, value, (err) => {});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Iselection.html":{"url":"interfaces/Iselection.html","title":"interface - Iselection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Iselection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/selector-service.service.ts\n        \n\n            \n                Description\n            \n            \n                represents a selecetion with th eioBroker ID, the Observer of the whole Container the ContainerMap it self and the selection function \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        mapChangeObserver$\n                                \n                                \n                                        name\n                                \n                                \n                                        selectionFN\n                                \n                                \n                                        stateObjectContainerMap\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mapChangeObserver$\n                                    \n                                \n                                \n                                    \n                                        mapChangeObserver$:         Subject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Subject\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    observer for the stateObjectConainer \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ioBroker id that is representing \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectionFN\n                                    \n                                \n                                \n                                    \n                                        selectionFN:         TselectionFN\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TselectionFN\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    selection Function \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stateObjectContainerMap\n                                    \n                                \n                                \n                                    \n                                        stateObjectContainerMap:         TstateObjectContainerMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TstateObjectContainerMap\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    container Map \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Injectable\n} from '@angular/core';\nimport {\n  Subject,\n  BehaviorSubject\n} from 'rxjs';\nimport {\n  of\n} from 'rxjs';\nimport {\n  filter,\n  map\n} from 'rxjs/operators';\n\nimport {\n  IobrokerService\n} from './iobroker.service';\n\n/**\n * Datatype to store the ioBroker-State and the corresponding ioBroker-Object. \n * It holds the stateObject also as a Observer to automaticly update if something changes\n */\nexport interface IstateObjectContainer {\n  /** ioBroker id that is representing */\n  id: string;\n  /** ioState that corresponde to the ioBroker id */\n  ioState: Object;\n  /** ioObject that corresponde to the ioBroker id */\n  ioObject: Object;\n  /** observer for that ioBroker id */\n  stateObjectContainer$ : Subject; // Subject \n}\n\n/** Map with all all IstateObjectConainers */\nexport type TstateObjectContainerMap = Map  ;\n\n/** selector Function that selects the needed ioBroker id */\nexport type TselectionFN = (IstateObjectContainer) => boolean;\n\n/** represents a selecetion with th eioBroker ID, the Observer of the whole Container the ContainerMap it self and the selection function */\nexport interface Iselection {\n  /** ioBroker id that is representing */\n  name: string;\n  /** observer for the stateObjectConainer */\n  mapChangeObserver$: Subject ;\n  /** container Map */\n  stateObjectContainerMap: TstateObjectContainerMap;\n  /** selection Function */\n  selectionFN: TselectionFN;\n}\n\n/**\n * Selection Service to get the selection with the fitting IOBroker statesContainers\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SelectorServiceService {\n\n  /** the Map with all the objectContainer, id=ioBroker id */\n  private stateObjectContainerMap: TstateObjectContainerMap = new Map();\n  /** the Map with all the registered selections, id=selectionName */\n  private selectionMap: Map  = new Map(); // Mapp( = new Map(); // --> key (id) / value (State)\n  /** all ioBroker objects, id=ioBroker id */\n  private storeObjectMap: Map  = new Map(); // --> key (id) / value (Object)\n\n  /** @ignore */\n  constructor(private iobrokerService: IobrokerService) {\n    this.addAllStateObjects();\n    this.checkStateUpdate();\n  }\n\n  /**\n   * subscribes for updates on States and Objects and updates all the Container states.\n   * Also updates selections if needed\n   */\n  private checkStateUpdate() {\n\n    // update when States changes\n    this.iobrokerService.getUpdatedState()\n      .subscribe(([id, stateIO]) => {\n        this.storeStateMap.set(id, stateIO);\n        this.addStateObjectToContainer(id, stateIO);\n        this.setUpdateStateObjectContainer$(id);\n      });\n\n    // update when Object changes\n    this.iobrokerService.getUpdatedObject()\n      .subscribe(([id, objctIO]) => {\n        this.storeStateMap.set(id, objctIO);\n        if (!this.storeStateMap.has(id)) {\n          return;\n        }\n        this.addStateObjectToContainer(id, this.storeStateMap.get(id));\n        this.setUpdateStateObjectContainer$(id);\n      })\n  }\n\n  /**\n   * Loads all States and Objects from ioBroker into the cache\n   */\n  private async addAllStateObjects() {\n    // load all states and Objects into the stateObjectContainer\n    const states: any = await this.iobrokerService.getStates(null);\n    for (const id in states) {\n      this.storeStateMap.set(id, states[id]);\n    }\n    const objects: any = await this.iobrokerService.getObjects().catch((err) => {\n      console.error(err);\n    });\n    for (const id in objects) {\n      this.storeObjectMap.set(id, objects[id]);\n    }\n\n    this.storeStateMap.forEach((stateIO: Object, id: string, map) => {\n      if(stateIO && id){\n        let ioState = stateIO;\n        this.addStateObjectToContainer(id, ioState);\n        this.setUpdateStateObjectContainer$(id);\n      }\n    })\n\n  }\n\n  /**\n   * create or updates the StateObjectContainer and updates also the StateObjectContainer Observer\n   * \n   * @param {string} id id of the ioBroker state/object\n   * @param {Object} stateIO ioBroker state to be set into the stateObjectContainer\n   */\n  private addStateObjectToContainer(id: string, stateIO: Object) {\n    if (this.stateObjectContainerMap.has(id)) {\n      let stateContainer: IstateObjectContainer = this.stateObjectContainerMap.get(id);\n      stateContainer.ioState = stateIO;\n      stateContainer.ioObject = this.storeObjectMap.has(id) ? this.storeObjectMap.get(id) : null;\n      stateContainer.stateObjectContainer$.next([stateContainer.ioState, stateContainer.ioObject]);\n    } else {\n      let stateContainer: IstateObjectContainer = {\n        id: id,\n        ioState: stateIO,\n        ioObject: this.storeObjectMap.has(id) ? this.storeObjectMap.get(id) : null,\n        stateObjectContainer$: null,\n      };\n      stateContainer.stateObjectContainer$ = new BehaviorSubject([stateContainer.ioState, stateContainer.ioObject]);\n      this.stateObjectContainerMap.set(id, stateContainer);\n    }\n  }\n\n  /**\n   * Updates the StateObjectContainer in all Selections already registered\n   * \n   * @param {string} id id of the ioBroker state/object\n   */\n  private setUpdateStateObjectContainer$(id: string) {\n\n    this.selectionMap.forEach((selection: Iselection, selectionName: string, map) => {\n      this.createUpdateSelectionMap(id, selection);\n    });\n  }\n\n  /**\n   * Updates the selections if ioBroker state/object changes\n   * @param id id of the ioBroker state/object\n   * @param selection creates or updates the selection map if selection fits the updated state\n   */\n  private createUpdateSelectionMap(id: string, selection: Iselection) {\n    // check all Iselection in the observersPerSelectionMap and update then next\n    let stateObjectContainer = this.stateObjectContainerMap.get(id);\n\n    // if not fit the selection createria, return\n    if (!selection.selectionFN(stateObjectContainer)) {\n      return;\n    }\n\n    // if is already in the stateObjectContainerMap, just return\n    if(selection.stateObjectContainerMap.has(id)){\n      return;\n    }\n\n    // if not in stateObjectContainerMap, add it and update mapChangeObserver$\n    selection.stateObjectContainerMap.set(id, this.stateObjectContainerMap.get(id));\n    selection.mapChangeObserver$.next(this.stateObjectContainerMap.get(id));\n  }\n\n  /**\n   * Returns the SelectionMap for all the fitting statesContainers (Observers)\n   * @param {string} name name of the \n   * @param {Function} selectionFN selection Funtion that returns true or false if the ioBroker id (States/Object) fits the criteria or not\n   * @returns {Iselection} returns the selection with the observers corresponding to the selection\n   */\n  public getSelector(name: string, selectionFN: TselectionFN): Iselection {\n    // id selection is alread created, return directly the observerMap$\n    if(this.selectionMap.has(name)) {\n      return this.selectionMap.get(name);\n    }\n\n    let observerMap: TstateObjectContainerMap = new Map();\n\n    \n    //run selectionFN and add all IstateObjectContainer$ from TstateObjectContainerMap that fits to the Iselection\n    this.stateObjectContainerMap.forEach((stateObjectContainer, key, wholeMap) => {\n      if(selectionFN(stateObjectContainer)){\n        observerMap.set(key, stateObjectContainer);\n      }\n    })\n    // create and save the Iselection into the this.observersPerSelectionMap\n\n\n    let selection:Iselection = {\n      name: name,\n      mapChangeObserver$: new BehaviorSubject(null),\n      stateObjectContainerMap: observerMap,\n      selectionFN: selectionFN\n    }\n\n    this.selectionMap.set(name, selection);\n    // returns the observerMap$\n    return selection;\n  }\n\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IstateObjectContainer.html":{"url":"interfaces/IstateObjectContainer.html","title":"interface - IstateObjectContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IstateObjectContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/selector-service.service.ts\n        \n\n            \n                Description\n            \n            \n                Datatype to store the ioBroker-State and the corresponding ioBroker-Object. \nIt holds the stateObject also as a Observer to automaticly update if something changes\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        ioObject\n                                \n                                \n                                        ioState\n                                \n                                \n                                        stateObjectContainer$\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ioBroker id that is representing \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ioObject\n                                    \n                                \n                                \n                                    \n                                        ioObject:         Object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Object\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ioObject that corresponde to the ioBroker id \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ioState\n                                    \n                                \n                                \n                                    \n                                        ioState:         Object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Object\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ioState that corresponde to the ioBroker id \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stateObjectContainer$\n                                    \n                                \n                                \n                                    \n                                        stateObjectContainer$:     Subject<>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subject<>\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    observer for that ioBroker id \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Injectable\n} from '@angular/core';\nimport {\n  Subject,\n  BehaviorSubject\n} from 'rxjs';\nimport {\n  of\n} from 'rxjs';\nimport {\n  filter,\n  map\n} from 'rxjs/operators';\n\nimport {\n  IobrokerService\n} from './iobroker.service';\n\n/**\n * Datatype to store the ioBroker-State and the corresponding ioBroker-Object. \n * It holds the stateObject also as a Observer to automaticly update if something changes\n */\nexport interface IstateObjectContainer {\n  /** ioBroker id that is representing */\n  id: string;\n  /** ioState that corresponde to the ioBroker id */\n  ioState: Object;\n  /** ioObject that corresponde to the ioBroker id */\n  ioObject: Object;\n  /** observer for that ioBroker id */\n  stateObjectContainer$ : Subject; // Subject \n}\n\n/** Map with all all IstateObjectConainers */\nexport type TstateObjectContainerMap = Map  ;\n\n/** selector Function that selects the needed ioBroker id */\nexport type TselectionFN = (IstateObjectContainer) => boolean;\n\n/** represents a selecetion with th eioBroker ID, the Observer of the whole Container the ContainerMap it self and the selection function */\nexport interface Iselection {\n  /** ioBroker id that is representing */\n  name: string;\n  /** observer for the stateObjectConainer */\n  mapChangeObserver$: Subject ;\n  /** container Map */\n  stateObjectContainerMap: TstateObjectContainerMap;\n  /** selection Function */\n  selectionFN: TselectionFN;\n}\n\n/**\n * Selection Service to get the selection with the fitting IOBroker statesContainers\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SelectorServiceService {\n\n  /** the Map with all the objectContainer, id=ioBroker id */\n  private stateObjectContainerMap: TstateObjectContainerMap = new Map();\n  /** the Map with all the registered selections, id=selectionName */\n  private selectionMap: Map  = new Map(); // Mapp( = new Map(); // --> key (id) / value (State)\n  /** all ioBroker objects, id=ioBroker id */\n  private storeObjectMap: Map  = new Map(); // --> key (id) / value (Object)\n\n  /** @ignore */\n  constructor(private iobrokerService: IobrokerService) {\n    this.addAllStateObjects();\n    this.checkStateUpdate();\n  }\n\n  /**\n   * subscribes for updates on States and Objects and updates all the Container states.\n   * Also updates selections if needed\n   */\n  private checkStateUpdate() {\n\n    // update when States changes\n    this.iobrokerService.getUpdatedState()\n      .subscribe(([id, stateIO]) => {\n        this.storeStateMap.set(id, stateIO);\n        this.addStateObjectToContainer(id, stateIO);\n        this.setUpdateStateObjectContainer$(id);\n      });\n\n    // update when Object changes\n    this.iobrokerService.getUpdatedObject()\n      .subscribe(([id, objctIO]) => {\n        this.storeStateMap.set(id, objctIO);\n        if (!this.storeStateMap.has(id)) {\n          return;\n        }\n        this.addStateObjectToContainer(id, this.storeStateMap.get(id));\n        this.setUpdateStateObjectContainer$(id);\n      })\n  }\n\n  /**\n   * Loads all States and Objects from ioBroker into the cache\n   */\n  private async addAllStateObjects() {\n    // load all states and Objects into the stateObjectContainer\n    const states: any = await this.iobrokerService.getStates(null);\n    for (const id in states) {\n      this.storeStateMap.set(id, states[id]);\n    }\n    const objects: any = await this.iobrokerService.getObjects().catch((err) => {\n      console.error(err);\n    });\n    for (const id in objects) {\n      this.storeObjectMap.set(id, objects[id]);\n    }\n\n    this.storeStateMap.forEach((stateIO: Object, id: string, map) => {\n      if(stateIO && id){\n        let ioState = stateIO;\n        this.addStateObjectToContainer(id, ioState);\n        this.setUpdateStateObjectContainer$(id);\n      }\n    })\n\n  }\n\n  /**\n   * create or updates the StateObjectContainer and updates also the StateObjectContainer Observer\n   * \n   * @param {string} id id of the ioBroker state/object\n   * @param {Object} stateIO ioBroker state to be set into the stateObjectContainer\n   */\n  private addStateObjectToContainer(id: string, stateIO: Object) {\n    if (this.stateObjectContainerMap.has(id)) {\n      let stateContainer: IstateObjectContainer = this.stateObjectContainerMap.get(id);\n      stateContainer.ioState = stateIO;\n      stateContainer.ioObject = this.storeObjectMap.has(id) ? this.storeObjectMap.get(id) : null;\n      stateContainer.stateObjectContainer$.next([stateContainer.ioState, stateContainer.ioObject]);\n    } else {\n      let stateContainer: IstateObjectContainer = {\n        id: id,\n        ioState: stateIO,\n        ioObject: this.storeObjectMap.has(id) ? this.storeObjectMap.get(id) : null,\n        stateObjectContainer$: null,\n      };\n      stateContainer.stateObjectContainer$ = new BehaviorSubject([stateContainer.ioState, stateContainer.ioObject]);\n      this.stateObjectContainerMap.set(id, stateContainer);\n    }\n  }\n\n  /**\n   * Updates the StateObjectContainer in all Selections already registered\n   * \n   * @param {string} id id of the ioBroker state/object\n   */\n  private setUpdateStateObjectContainer$(id: string) {\n\n    this.selectionMap.forEach((selection: Iselection, selectionName: string, map) => {\n      this.createUpdateSelectionMap(id, selection);\n    });\n  }\n\n  /**\n   * Updates the selections if ioBroker state/object changes\n   * @param id id of the ioBroker state/object\n   * @param selection creates or updates the selection map if selection fits the updated state\n   */\n  private createUpdateSelectionMap(id: string, selection: Iselection) {\n    // check all Iselection in the observersPerSelectionMap and update then next\n    let stateObjectContainer = this.stateObjectContainerMap.get(id);\n\n    // if not fit the selection createria, return\n    if (!selection.selectionFN(stateObjectContainer)) {\n      return;\n    }\n\n    // if is already in the stateObjectContainerMap, just return\n    if(selection.stateObjectContainerMap.has(id)){\n      return;\n    }\n\n    // if not in stateObjectContainerMap, add it and update mapChangeObserver$\n    selection.stateObjectContainerMap.set(id, this.stateObjectContainerMap.get(id));\n    selection.mapChangeObserver$.next(this.stateObjectContainerMap.get(id));\n  }\n\n  /**\n   * Returns the SelectionMap for all the fitting statesContainers (Observers)\n   * @param {string} name name of the \n   * @param {Function} selectionFN selection Funtion that returns true or false if the ioBroker id (States/Object) fits the criteria or not\n   * @returns {Iselection} returns the selection with the observers corresponding to the selection\n   */\n  public getSelector(name: string, selectionFN: TselectionFN): Iselection {\n    // id selection is alread created, return directly the observerMap$\n    if(this.selectionMap.has(name)) {\n      return this.selectionMap.get(name);\n    }\n\n    let observerMap: TstateObjectContainerMap = new Map();\n\n    \n    //run selectionFN and add all IstateObjectContainer$ from TstateObjectContainerMap that fits to the Iselection\n    this.stateObjectContainerMap.forEach((stateObjectContainer, key, wholeMap) => {\n      if(selectionFN(stateObjectContainer)){\n        observerMap.set(key, stateObjectContainer);\n      }\n    })\n    // create and save the Iselection into the this.observersPerSelectionMap\n\n\n    let selection:Iselection = {\n      name: name,\n      mapChangeObserver$: new BehaviorSubject(null),\n      stateObjectContainerMap: observerMap,\n      selectionFN: selectionFN\n    }\n\n    this.selectionMap.set(name, selection);\n    // returns the observerMap$\n    return selection;\n  }\n\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/LoadScriptDirectiveDirective.html":{"url":"directives/LoadScriptDirectiveDirective.html","title":"directive - LoadScriptDirectiveDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  LoadScriptDirectiveDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/load-script-directive.directive.ts\n        \n\n            \n                Description\n            \n            \n                To load external javascript files\n\n            \n\n            \n                Implements\n            \n            \n                            OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appLoadScript]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, OnInit, Input } from '@angular/core';\n\n/** \n * To load external javascript files\n */\n  \n@Directive({\n  selector: '[appLoadScript]'\n})\nexport class LoadScriptDirectiveDirective implements OnInit{\n\n  /** @ignore */\n  @Input('script') param:  any;\n\n  /** @ignore */\n  ngOnInit() {\n    let node = document.createElement('script');\n    node.src = this.param;\n    node.type = 'text/javascript';\n    node.async = false;\n    node.charset = 'utf-8';\n    document.getElementsByTagName('head')[0].appendChild(node);\n  }\n\n  /** @ignore */\n  constructor() { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainSiteComponent.html":{"url":"components/MainSiteComponent.html","title":"component - MainSiteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainSiteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-site/main-site.component.ts\n\n\n    \n        Description\n    \n    \n        Shows some ioBroker Details\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-site\n            \n\n            \n                styleUrls\n                ./main-site.component.css\n            \n\n\n\n            \n                templateUrl\n                ./main-site.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { IobrokerService } from '../iobroker.service';\nimport { StateStoreService } from '../state-store.service';\n\n/**\n * Shows some ioBroker Details\n */\n\n@Component({\n  selector: 'app-main-site',\n  templateUrl: './main-site.component.html',\n  styleUrls: ['./main-site.component.css']\n})\nexport class MainSiteComponent implements OnInit {\n\n  /** @ignore */\n  hostName: string;\n  /** @ignore */\n  isConnected: boolean;\n  /** @ignore */\n  updatedStateID: string;\n  /** @ignore */\n  updatedState: string;\n  /** @ignore */\n  newError: string;\n\n  /** @ignore */\n  constructor(private iobrokerService: IobrokerService, private stateStoreService: StateStoreService) { }\n\n\n  /** @ignore */\n  ngOnInit() {\n    this.getInitInformations();\n    this.getUpdatedState();\n    this.getNewError();\n  }\n\n  /** @ignore */\n  getInitInformations(): void {\n    this.iobrokerService.getLiveHost()\n      .subscribe(hostName => this.hostName = hostName);\n    this.iobrokerService.getIsConnected()\n      .subscribe((isConnected) => {\n        this.isConnected = isConnected;\n      });\n    this.stateStoreService.getConfig()\n    .subscribe((config) => {    }); \n  }\n\n  /** @ignore */\n  getUpdatedState(): void {\n    this.iobrokerService.getUpdatedState()\n      .subscribe(([id, stateIO]) => {\n        this.updatedStateID = id;\n        this.updatedState = JSON.stringify(stateIO);\n      });\n  }\n\n  /** @ignore */\n  getNewError(): void {\n    this.iobrokerService.getNewError()\n      .subscribe((err) => {\n        this.newError = err;\n      });\n  }\n\n}\n\n    \n\n    \n        Sprint 2 - Version\nDetails\nLiveHost: {{hostName}}\nConnected: {{isConnected}}\n\nError: {{newError}}\n\nUpdated State ID : {{updatedStateID}}\nState: {{updatedState}}\n\n\n    \n\n    \n                \n                    ./main-site.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Sprint 2 - VersionDetailsLiveHost: {{hostName}}Connected: {{isConnected}}Error: {{newError}}Updated State ID : {{updatedStateID}}State: {{updatedState}}'\n    var COMPONENTS = [{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'MainSiteComponent', 'selector': 'app-main-site'},{'name': 'ShowLightsComponent', 'selector': 'app-show-lights'},{'name': 'ShowRoomsComponent', 'selector': 'app-show-rooms'},{'name': 'TestComponent', 'selector': 'app-test'}];\n    var DIRECTIVES = [{'name': 'LoadScriptDirectiveDirective', 'selector': '[appLoadScript]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainSiteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SelectorServiceService.html":{"url":"injectables/SelectorServiceService.html","title":"injectable - SelectorServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SelectorServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/selector-service.service.ts\n        \n\n            \n                Description\n            \n            \n                Selection Service to get the selection with the fitting IOBroker statesContainers\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                selectionMap\n                            \n                            \n                                    Private\n                                stateObjectContainerMap\n                            \n                            \n                                    Private\n                                storeObjectMap\n                            \n                            \n                                    Private\n                                storeStateMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                addAllStateObjects\n                            \n                            \n                                    Private\n                                addStateObjectToContainer\n                            \n                            \n                                    Private\n                                checkStateUpdate\n                            \n                            \n                                    Private\n                                createUpdateSelectionMap\n                            \n                            \n                                    Public\n                                getSelector\n                            \n                            \n                                    Private\n                                setUpdateStateObjectContainer$\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            addAllStateObjects\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addAllStateObjects()\n                \n            \n\n\n            \n                \n                    Defined in src/app/selector-service.service.ts:106\n                \n            \n\n\n            \n                \n                    Loads all States and Objects from ioBroker into the cache\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addStateObjectToContainer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addStateObjectToContainer(id: string, stateIO: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/selector-service.service.ts:135\n                \n            \n\n\n            \n                \n                    create or updates the StateObjectContainer and updates also the StateObjectContainer Observer\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of the ioBroker state/object\n\n                                    \n                                \n                                \n                                    stateIO\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ioBroker state to be set into the stateObjectContainer\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            checkStateUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkStateUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/selector-service.service.ts:81\n                \n            \n\n\n            \n                \n                    subscribes for updates on States and Objects and updates all the Container states.\nAlso updates selections if needed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createUpdateSelectionMap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUpdateSelectionMap(id: string, selection: Iselection)\n                \n            \n\n\n            \n                \n                    Defined in src/app/selector-service.service.ts:170\n                \n            \n\n\n            \n                \n                    Updates the selections if ioBroker state/object changes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of the ioBroker state/object\n\n                                    \n                                \n                                \n                                    selection\n                                    \n                                                Iselection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        creates or updates the selection map if selection fits the updated state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSelector\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSelector(name: string, selectionFN: TselectionFN)\n                \n            \n\n\n            \n                \n                    Defined in src/app/selector-service.service.ts:195\n                \n            \n\n\n            \n                \n                    Returns the SelectionMap for all the fitting statesContainers (Observers)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        name of the \n\n                                    \n                                \n                                \n                                    selectionFN\n                                    \n                                                TselectionFN\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        selection Funtion that returns true or false if the ioBroker id (States/Object) fits the criteria or not\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Iselection\n\n                    \n                    \n                        returns the selection with the observers corresponding to the selection\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setUpdateStateObjectContainer$\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpdateStateObjectContainer$(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/selector-service.service.ts:158\n                \n            \n\n\n            \n                \n                    Updates the StateObjectContainer in all Selections already registered\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of the ioBroker state/object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectionMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/selector-service.service.ts:64\n                            \n                        \n\n                \n                    \n                        the Map with all the registered selections, id=selectionName \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stateObjectContainerMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TstateObjectContainerMap\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/selector-service.service.ts:62\n                            \n                        \n\n                \n                    \n                        the Map with all the objectContainer, id=ioBroker id \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            storeObjectMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/selector-service.service.ts:69\n                            \n                        \n\n                \n                    \n                        all ioBroker objects, id=ioBroker id \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            storeStateMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/selector-service.service.ts:67\n                            \n                        \n\n                \n                    \n                        all ioBroker states, id=ioBroker id \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Injectable\n} from '@angular/core';\nimport {\n  Subject,\n  BehaviorSubject\n} from 'rxjs';\nimport {\n  of\n} from 'rxjs';\nimport {\n  filter,\n  map\n} from 'rxjs/operators';\n\nimport {\n  IobrokerService\n} from './iobroker.service';\n\n/**\n * Datatype to store the ioBroker-State and the corresponding ioBroker-Object. \n * It holds the stateObject also as a Observer to automaticly update if something changes\n */\nexport interface IstateObjectContainer {\n  /** ioBroker id that is representing */\n  id: string;\n  /** ioState that corresponde to the ioBroker id */\n  ioState: Object;\n  /** ioObject that corresponde to the ioBroker id */\n  ioObject: Object;\n  /** observer for that ioBroker id */\n  stateObjectContainer$ : Subject; // Subject \n}\n\n/** Map with all all IstateObjectConainers */\nexport type TstateObjectContainerMap = Map  ;\n\n/** selector Function that selects the needed ioBroker id */\nexport type TselectionFN = (IstateObjectContainer) => boolean;\n\n/** represents a selecetion with th eioBroker ID, the Observer of the whole Container the ContainerMap it self and the selection function */\nexport interface Iselection {\n  /** ioBroker id that is representing */\n  name: string;\n  /** observer for the stateObjectConainer */\n  mapChangeObserver$: Subject ;\n  /** container Map */\n  stateObjectContainerMap: TstateObjectContainerMap;\n  /** selection Function */\n  selectionFN: TselectionFN;\n}\n\n/**\n * Selection Service to get the selection with the fitting IOBroker statesContainers\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SelectorServiceService {\n\n  /** the Map with all the objectContainer, id=ioBroker id */\n  private stateObjectContainerMap: TstateObjectContainerMap = new Map();\n  /** the Map with all the registered selections, id=selectionName */\n  private selectionMap: Map  = new Map(); // Mapp( = new Map(); // --> key (id) / value (State)\n  /** all ioBroker objects, id=ioBroker id */\n  private storeObjectMap: Map  = new Map(); // --> key (id) / value (Object)\n\n  /** @ignore */\n  constructor(private iobrokerService: IobrokerService) {\n    this.addAllStateObjects();\n    this.checkStateUpdate();\n  }\n\n  /**\n   * subscribes for updates on States and Objects and updates all the Container states.\n   * Also updates selections if needed\n   */\n  private checkStateUpdate() {\n\n    // update when States changes\n    this.iobrokerService.getUpdatedState()\n      .subscribe(([id, stateIO]) => {\n        this.storeStateMap.set(id, stateIO);\n        this.addStateObjectToContainer(id, stateIO);\n        this.setUpdateStateObjectContainer$(id);\n      });\n\n    // update when Object changes\n    this.iobrokerService.getUpdatedObject()\n      .subscribe(([id, objctIO]) => {\n        this.storeStateMap.set(id, objctIO);\n        if (!this.storeStateMap.has(id)) {\n          return;\n        }\n        this.addStateObjectToContainer(id, this.storeStateMap.get(id));\n        this.setUpdateStateObjectContainer$(id);\n      })\n  }\n\n  /**\n   * Loads all States and Objects from ioBroker into the cache\n   */\n  private async addAllStateObjects() {\n    // load all states and Objects into the stateObjectContainer\n    const states: any = await this.iobrokerService.getStates(null);\n    for (const id in states) {\n      this.storeStateMap.set(id, states[id]);\n    }\n    const objects: any = await this.iobrokerService.getObjects().catch((err) => {\n      console.error(err);\n    });\n    for (const id in objects) {\n      this.storeObjectMap.set(id, objects[id]);\n    }\n\n    this.storeStateMap.forEach((stateIO: Object, id: string, map) => {\n      if(stateIO && id){\n        let ioState = stateIO;\n        this.addStateObjectToContainer(id, ioState);\n        this.setUpdateStateObjectContainer$(id);\n      }\n    })\n\n  }\n\n  /**\n   * create or updates the StateObjectContainer and updates also the StateObjectContainer Observer\n   * \n   * @param {string} id id of the ioBroker state/object\n   * @param {Object} stateIO ioBroker state to be set into the stateObjectContainer\n   */\n  private addStateObjectToContainer(id: string, stateIO: Object) {\n    if (this.stateObjectContainerMap.has(id)) {\n      let stateContainer: IstateObjectContainer = this.stateObjectContainerMap.get(id);\n      stateContainer.ioState = stateIO;\n      stateContainer.ioObject = this.storeObjectMap.has(id) ? this.storeObjectMap.get(id) : null;\n      stateContainer.stateObjectContainer$.next([stateContainer.ioState, stateContainer.ioObject]);\n    } else {\n      let stateContainer: IstateObjectContainer = {\n        id: id,\n        ioState: stateIO,\n        ioObject: this.storeObjectMap.has(id) ? this.storeObjectMap.get(id) : null,\n        stateObjectContainer$: null,\n      };\n      stateContainer.stateObjectContainer$ = new BehaviorSubject([stateContainer.ioState, stateContainer.ioObject]);\n      this.stateObjectContainerMap.set(id, stateContainer);\n    }\n  }\n\n  /**\n   * Updates the StateObjectContainer in all Selections already registered\n   * \n   * @param {string} id id of the ioBroker state/object\n   */\n  private setUpdateStateObjectContainer$(id: string) {\n\n    this.selectionMap.forEach((selection: Iselection, selectionName: string, map) => {\n      this.createUpdateSelectionMap(id, selection);\n    });\n  }\n\n  /**\n   * Updates the selections if ioBroker state/object changes\n   * @param id id of the ioBroker state/object\n   * @param selection creates or updates the selection map if selection fits the updated state\n   */\n  private createUpdateSelectionMap(id: string, selection: Iselection) {\n    // check all Iselection in the observersPerSelectionMap and update then next\n    let stateObjectContainer = this.stateObjectContainerMap.get(id);\n\n    // if not fit the selection createria, return\n    if (!selection.selectionFN(stateObjectContainer)) {\n      return;\n    }\n\n    // if is already in the stateObjectContainerMap, just return\n    if(selection.stateObjectContainerMap.has(id)){\n      return;\n    }\n\n    // if not in stateObjectContainerMap, add it and update mapChangeObserver$\n    selection.stateObjectContainerMap.set(id, this.stateObjectContainerMap.get(id));\n    selection.mapChangeObserver$.next(this.stateObjectContainerMap.get(id));\n  }\n\n  /**\n   * Returns the SelectionMap for all the fitting statesContainers (Observers)\n   * @param {string} name name of the \n   * @param {Function} selectionFN selection Funtion that returns true or false if the ioBroker id (States/Object) fits the criteria or not\n   * @returns {Iselection} returns the selection with the observers corresponding to the selection\n   */\n  public getSelector(name: string, selectionFN: TselectionFN): Iselection {\n    // id selection is alread created, return directly the observerMap$\n    if(this.selectionMap.has(name)) {\n      return this.selectionMap.get(name);\n    }\n\n    let observerMap: TstateObjectContainerMap = new Map();\n\n    \n    //run selectionFN and add all IstateObjectContainer$ from TstateObjectContainerMap that fits to the Iselection\n    this.stateObjectContainerMap.forEach((stateObjectContainer, key, wholeMap) => {\n      if(selectionFN(stateObjectContainer)){\n        observerMap.set(key, stateObjectContainer);\n      }\n    })\n    // create and save the Iselection into the this.observersPerSelectionMap\n\n\n    let selection:Iselection = {\n      name: name,\n      mapChangeObserver$: new BehaviorSubject(null),\n      stateObjectContainerMap: observerMap,\n      selectionFN: selectionFN\n    }\n\n    this.selectionMap.set(name, selection);\n    // returns the observerMap$\n    return selection;\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShowLightsComponent.html":{"url":"components/ShowLightsComponent.html","title":"component - ShowLightsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShowLightsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/show-lights/show-lights.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display all the lights that are within a Room\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-show-lights\n            \n\n            \n                styleUrls\n                ./show-lights.component.css\n            \n\n\n\n            \n                templateUrl\n                ./show-lights.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ascSort\n                            \n                            \n                                lightsArray\n                            \n                            \n                                lightSelectorFN\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initAllLights\n                            \n                            \n                                onChangeSwitch\n                            \n                            \n                                    Private\n                                updateLightArray\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initAllLights\n                        \n                        \n                    \n                \n            \n            \n                \ninitAllLights()\n                \n            \n\n\n            \n                \n                    Defined in src/app/show-lights/show-lights.component.ts:73\n                \n            \n\n\n            \n                \n                    reads all the lights and sets the value to the updatLightArray\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChangeSwitch\n                        \n                        \n                    \n                \n            \n            \n                \nonChangeSwitch(id: string, value: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/show-lights/show-lights.component.ts:130\n                \n            \n\n\n            \n                \n                    To change the Switch state for example in the Template\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the ioBroker id to change\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the new value the ioBroker id should have\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateLightArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLightArray(id: string, ioState: Object, ioObject: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/show-lights/show-lights.component.ts:110\n                \n            \n\n\n            \n                \n                    Updates the LightArray with the given with the new ioState and ioObject.\nIf the LightArray do not yet have a enty with that id, it adds a new one\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ioBroker ID\n\n                                    \n                                \n                                \n                                    ioState\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ioBroker state Object\n\n                                    \n                                \n                                \n                                    ioObject\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ioBroker Object Object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            Simple call it from within the component:\nthis.updateLightArray(new_id, new_ioState, new_ioObject);\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ascSort\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ClrDatagridSortOrder.ASC\n                        \n                    \n                        \n                            \n                                    Defined in src/app/show-lights/show-lights.component.ts:31\n                            \n                        \n\n                \n                    \n                        the default sort for the web site \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightsArray\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     [literal type]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/show-lights/show-lights.component.ts:36\n                            \n                        \n\n                \n                    \n                        the lightsArray that has all the lights observer in it\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightSelectorFN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TselectionFN\n\n                        \n                    \n                    \n                        \n                            Default value : ((stateObjectContainer: IstateObjectContainer) => {\n    return (\n      stateObjectContainer && \n      'ioObject' in stateObjectContainer && \n      stateObjectContainer.ioObject &&\n      'common' in stateObjectContainer.ioObject && \n      'role' in stateObjectContainer.ioObject['common'] &&\n      stateObjectContainer.ioObject['common']['role'] === 'switch.light' &&\n      'enums' in stateObjectContainer.ioObject && \n      Object.keys(stateObjectContainer.ioObject['enums']).length > 0\n    );\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/show-lights/show-lights.component.ts:42\n                            \n                        \n\n                \n                    \n                        the lightSelector function for the selector-service to select the needed stateObjectContainers.\nin this case select only the stateObjectContainerswith switch.lights and enum has a room\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  OnInit,\n} from '@angular/core';\nimport {\n  IobrokerService\n} from '../iobroker.service';\nimport {\n  ClrDatagridSortOrder\n} from '@clr/angular';\nimport {\n  SelectorServiceService,\n  TselectionFN,\n  IstateObjectContainer\n} from '../selector-service.service';\nimport { isObject } from 'util';\n\n/**\n * Component to display all the lights that are within a Room\n */\n\n@Component({\n  selector: 'app-show-lights',\n  templateUrl: './show-lights.component.html',\n  styleUrls: ['./show-lights.component.css']\n})\n\nexport class ShowLightsComponent implements OnInit {\n\n  /** the default sort for the web site */\n  ascSort = ClrDatagridSortOrder.ASC;\n\n  /**\n   * the lightsArray that has all the lights observer in it\n   */\n  lightsArray:[{id:string, ioState:{}, ioObject:{}, roomsIDArray:string}];\n\n  /**\n   * the lightSelector function for the selector-service to select the needed stateObjectContainers.\n   * in this case select only the stateObjectContainerswith switch.lights and enum has a room\n   */\n  lightSelectorFN: TselectionFN = ((stateObjectContainer: IstateObjectContainer) => {\n    return (\n      stateObjectContainer && \n      'ioObject' in stateObjectContainer && \n      stateObjectContainer.ioObject &&\n      'common' in stateObjectContainer.ioObject && \n      'role' in stateObjectContainer.ioObject['common'] &&\n      stateObjectContainer.ioObject['common']['role'] === 'switch.light' &&\n      'enums' in stateObjectContainer.ioObject && \n      Object.keys(stateObjectContainer.ioObject['enums']).length > 0\n    );\n  });\n\n  /**\n   * @ignore\n   */\n  constructor(\n    private iobrokerService: IobrokerService,\n    private selectorService: SelectorServiceService\n  ) {}\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n    this.initAllLights();\n  }\n\n  /**\n   * reads all the lights and sets the value to the updatLightArray\n   */\n  initAllLights() {\n    let selection = this.selectorService.getSelector('allLightsSelector', this.lightSelectorFN);\n    selection.mapChangeObserver$.subscribe((stateObjectContainer) => {\n      if(stateObjectContainer === null) {return}\n      stateObjectContainer.stateObjectContainer$.subscribe(([ioState, ioObject]) => {\n        if(ioState && 'val' in ioState && ioState['val'] !== null && typeof ioState['val'] === 'number') {\n\n        }\n        // console.log(ioState);\n        // console.log(ioObject);\n        this.updateLightArray(ioObject['_id'], ioState, ioObject);\n      })\n    });\n    selection.stateObjectContainerMap.forEach((stateObjectContainer, id, wholeMap) => {\n      stateObjectContainer.stateObjectContainer$.subscribe(([ioState, ioObject]) => {\n        if(ioState && 'val' in ioState && ioState['val'] !== null  && typeof ioState['val'] === 'number') {\n        }\n        // console.log(ioState);\n        // console.log(ioObject);\n        this.updateLightArray(id, ioState, ioObject);\n      })\n    })\n  }\n\n  /**\n   * Updates the LightArray with the given with the new ioState and ioObject.\n   * If the LightArray do not yet have a enty with that id, it adds a new one\n   * \n   * @example\n   * Simple call it from within the component:\n   * this.updateLightArray(new_id, new_ioState, new_ioObject);\n   * \n   * @param {sting} id ioBroker ID\n   * @param {Object} ioState ioBroker state Object\n   * @param {Object} ioObject ioBroker Object Object\n   * @returns void\n   */\n  private updateLightArray(id:string, ioState:Object, ioObject:Object){\n    const enum_ = Object.values(ioObject['enums'])[0].toString();\n    if(!this.lightsArray){\n      this.lightsArray = [{id:id, ioState:ioState, ioObject:ioObject, roomsIDArray:enum_}];\n      return;\n    }\n    const index = this.lightsArray.findIndex(e => e.id === id);\n    if(index === -1){\n      this.lightsArray.push({id:id, ioState:ioState, ioObject:ioObject, roomsIDArray:enum_});\n    }\n    else{\n      this.lightsArray[index] = {id:id, ioState:ioState, ioObject:ioObject, roomsIDArray:enum_};\n    }\n  }\n\n  /**\n   * To change the Switch state for example in the Template\n   * @param {string} id the ioBroker id to change\n   * @param {boolean} value the new value the ioBroker id should have\n   */\n  onChangeSwitch(id:string, value:boolean){\n    this.iobrokerService.setState(id, value);\n  }\n}\n\n    \n\n    \n        \n\n  loading!\n\n  Name\n  Status\n  Enums\n\n  \n    {{lightObject.ioObject.common.name}}\n    \n      \n    \n    {{lightObject.roomsIDArray}}\n  \n\n  \n    \n      Users per page\n      {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n      of {{pagination.totalItems}} users\n    \n  \n\n\n    \n\n    \n                \n                    ./show-lights.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  loading!  Name  Status  Enums      {{lightObject.ioObject.common.name}}                  {{lightObject.roomsIDArray}}              Users per page      {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}      of {{pagination.totalItems}} users      '\n    var COMPONENTS = [{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'MainSiteComponent', 'selector': 'app-main-site'},{'name': 'ShowLightsComponent', 'selector': 'app-show-lights'},{'name': 'ShowRoomsComponent', 'selector': 'app-show-rooms'},{'name': 'TestComponent', 'selector': 'app-test'}];\n    var DIRECTIVES = [{'name': 'LoadScriptDirectiveDirective', 'selector': '[appLoadScript]'}];\n    var ACTUAL_COMPONENT = {'name': 'ShowLightsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShowRoomsComponent.html":{"url":"components/ShowRoomsComponent.html","title":"component - ShowRoomsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShowRoomsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/show-rooms/show-rooms.component.ts\n\n\n    \n        Description\n    \n    \n        Shows all the Rooms from IOBroker\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-show-rooms\n            \n\n            \n                styleUrls\n                ./show-rooms.component.css\n            \n\n\n\n            \n                templateUrl\n                ./show-rooms.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                descSort\n                            \n                            \n                                new_enums\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/show-rooms/show-rooms.component.ts:39\n                \n            \n\n\n            \n                \n                    inits all the enums \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            descSort\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ClrDatagridSortOrder.DESC\n                        \n                    \n                        \n                            \n                                    Defined in src/app/show-rooms/show-rooms.component.ts:24\n                            \n                        \n\n                \n                    \n                        the default sort for the web site \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            new_enums\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/show-rooms/show-rooms.component.ts:27\n                            \n                        \n\n                \n                    \n                        Array with Room Enums to be showed \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  StateStoreService\n} from '../state-store.service'\nimport {\n  ClrDatagridSortOrder\n} from '@clr/angular';\n\n/**\n * Shows all the Rooms from IOBroker\n */\n\n@Component({\n  selector: 'app-show-rooms',\n  templateUrl: './show-rooms.component.html',\n  styleUrls: ['./show-rooms.component.css']\n})\nexport class ShowRoomsComponent implements OnInit {\n\n  /** the default sort for the web site */\n  descSort = ClrDatagridSortOrder.DESC;\n\n  /** Array with Room Enums to be showed */\n  new_enums: {\n    id: string,\n    numberOfMembers: number,\n    name: string,\n    members: string,\n    lastUpdate: number\n  } [] = [];\n\n  /** @ignore */\n  constructor(private stateStoreService: StateStoreService) {}\n\n  /** inits all the enums */\n  ngOnInit() {\n    this.stateStoreService.getEnums().subscribe((enums) => {\n      if (enums) {\n        enums.forEach((value$, key, array) => {\n          if (key.startsWith('enum.rooms.')) {\n            value$.subscribe((enum_) => {\n              if (typeof enum_.common.name === 'object') {\n                this.new_enums.push({\n                  id: key,\n                  name: enum_.common.name.de,\n                  numberOfMembers: enum_.common.members.length,\n                  members: enum_.common.members.join('\\n'),\n                  lastUpdate: enum_.ts\n                });\n              } else {\n                this.new_enums.push({\n                  id: key,\n                  name: enum_.common.name,\n                  numberOfMembers: enum_.common.members.length,\n                  members: enum_.common.members.join('\\n'),\n                  lastUpdate: enum_.ts\n                });\n              }\n            });\n\n          }\n        });\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n  Still loading!\n\n  Name\n  Members#:\n\n  \n    {{new_enum.name}}\n    {{new_enum.numberOfMembers}}\n    \n      \n        \n          \n            \n              \n                \n                  ID:\n                  {{new_enum.id}}\n                \n                \n                  Last Update:\n                  {{new_enum.lastUpdate}}\n                \n                \n                  Members:\n                  {{new_enum.members}}\n                \n              \n            \n          \n        \n      \n    \n  \n\n  \n    \n      Users per page\n      {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n      of {{pagination.totalItems}} users\n    \n  \n\n\n    \n\n    \n                \n                    ./show-rooms.component.css\n                \n                .example-container>* {}\n\n.example-div-center {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\ntable {\n  width: 100%;\n}\n\n.example-header-image {\n  background-image: url('https://cdn3.iconfinder.com/data/icons/files-folders-line/100/spreadsheet-512.png');\n  background-size: cover;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Still loading!  Name  Members#:      {{new_enum.name}}    {{new_enum.numberOfMembers}}                                                                                        ID:                  {{new_enum.id}}                                                  Last Update:                  {{new_enum.lastUpdate}}                                                  Members:                  {{new_enum.members}}                                                                                    Users per page      {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}      of {{pagination.totalItems}} users      '\n    var COMPONENTS = [{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'MainSiteComponent', 'selector': 'app-main-site'},{'name': 'ShowLightsComponent', 'selector': 'app-show-lights'},{'name': 'ShowRoomsComponent', 'selector': 'app-show-rooms'},{'name': 'TestComponent', 'selector': 'app-test'}];\n    var DIRECTIVES = [{'name': 'LoadScriptDirectiveDirective', 'selector': '[appLoadScript]'}];\n    var ACTUAL_COMPONENT = {'name': 'ShowRoomsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateStoreService.html":{"url":"injectables/StateStoreService.html","title":"injectable - StateStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StateStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-store.service.ts\n        \n\n            \n                Description\n            \n            \n                should no longer be used \n\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject, BehaviorSubject} from 'rxjs';\n\nimport { IobrokerService } from './iobroker.service';\nimport { of } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\n/** should no longer be used */\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateStoreService {\n\n  /** @ignore */\n  private storeStateMap = new Map(); // --> key (id) / value (State)  key (id) / value (Object)  key (id) / value (Enum) (null); // --> config is a observer\n  /** @ignore */\n  private enumMap$ = new BehaviorSubject > >(null);\n\n  /** @ignore */\n  constructor(private iobrokerService: IobrokerService) {\n    // load all states into state map\n    this.loadAllStatesIntoObserverMap();\n    console.log('Nach loadAllStatesIntoObserverMap');\n\n    // load all objects into object maps\n    this.loadAllObjectsIntoObserverMap();\n\n    // load all enums into object maps\n    this.loadAllEnumsIntoObserverMap();\n\n    // load config\n    this.loadAllConfigIntoObserverMap();\n  }\n\n  /** @ignore */\n  private async loadAllStatesIntoObserverMap() {\n    // load all states from ioBroker\n    const data: any = await this.iobrokerService.getStates(null);\n    for (const id in data) {\n      if (data.hasOwnProperty(id)) {\n        const stateIO = data[id];\n        if (!this.storeStateMap.has(id)) {\n          const tempStateOb$ = new BehaviorSubject(stateIO);\n          this.storeStateMap.set(id, tempStateOb$);\n        }\n        this.storeStateMap.get(id).next(stateIO);\n      }\n    }\n    // update all state changes\n    this.iobrokerService.getUpdatedState()\n      .subscribe(([id, stateIO]) => {\n        if (!this.storeStateMap.has(id)) {\n          const tempStateOb$ = new BehaviorSubject(stateIO);\n          this.storeStateMap.set(id, tempStateOb$);\n        }\n        this.storeStateMap.get(id).next(stateIO);\n      });\n  }\n\n  /** @ignore */\n  private async loadAllObjectsIntoObserverMap() {\n    // load all objects from ioBroker\n    const data: any = await this.iobrokerService.getObjects();\n    for (const id in data) {\n      if (data.hasOwnProperty(id)) {\n        const objectIO = data[id];\n        if (!this.storeObjectMap.has(id)) {\n          const tempObjectsOb$ = new BehaviorSubject(objectIO);\n          this.storeObjectMap.set(id, tempObjectsOb$);\n        }\n        this.storeObjectMap.get(id).next(objectIO);\n      }\n    }\n\n    // update all object changes\n    this.iobrokerService.getUpdatedObject()\n      .subscribe(([id, objectIO]) => {\n        if (!this.storeObjectMap.has(id)) {\n          const tempObjectsOb$ = new BehaviorSubject(objectIO);\n          this.storeObjectMap.set(id, tempObjectsOb$);\n        }\n        this.storeObjectMap.get(id).next(objectIO);\n      });\n  }\n\n  /** @ignore */\n  private async loadAllEnumsIntoObserverMap() {\n    // load all enums from ioBroker\n    const data: any = await this.iobrokerService.getEnums();\n    for (const id in data) {\n      if (data.hasOwnProperty(id)) {\n        const enumIO = data[id];\n        if (!this.storeEnumMap.has(id)) {\n          const tempEnumsOb$ = new BehaviorSubject(enumIO);\n          this.storeEnumMap.set(id, tempEnumsOb$);\n        }\n        this.storeEnumMap.get(id).next(enumIO);\n      }\n    }\n    this.enumMap$.next(this.storeEnumMap);\n  }\n\n  /** @ignore */\n  private async loadAllConfigIntoObserverMap() {\n    // load all config from ioBroker\n    const data: any = await this.iobrokerService.getConfig();\n    this.configObs$.next(data);\n  }\n\n  /** @ignore */\n  public getStatePerID(id: string):  Subject {\n    if (!this.storeStateMap.has(id)) {\n      const tempStateOb$ = new BehaviorSubject(null);\n      this.storeStateMap.set(id, tempStateOb$);\n    }\n    return this.storeStateMap.get(id);\n  }\n\n  /** @ignore */\n  public getConfig(): Subject {\n    return this.configObs$;\n  }\n\n  /** @ignore */\n  public getEnums(): Subject > >  {\n    return this.enumMap$;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TestComponent.html":{"url":"components/TestComponent.html","title":"component - TestComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TestComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/test/test.component.ts\n\n\n    \n        Description\n    \n    \n        To test\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-test\n            \n\n            \n                styleUrls\n                ./test.component.css\n            \n\n\n\n            \n                templateUrl\n                ./test.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * To test\n */\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.css']\n})\n\nexport class TestComponent implements OnInit {\n\n  /** @ignore */\n  values: number[] = [102, 115, 130, 137];\n\n  /** @ignore */\n  constructor() { }\n\n  /** @ignore */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n  \n\n  \n    \n      Option\n    \n  \n\n\n  \n    \n      \n      Shiba Inu\n      Dog Breed\n    \n    \n    \n      \n        The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n        A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n        bred for hunting.\n      \n    \n    \n      LIKE\n      SHARE\n    \n  \n\n    \n\n    \n                \n                    ./test.component.css\n                \n                .example-container {\n  display: flex;\n  flex-direction: column;\n}\n\n.example-container>* {\n  width: 50%;\n}\n\n.example-card {\n  max-width: 400px;\n}\n\n.example-card-content {\n  padding: 16px;\n}\n\n.example-header-image {\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n  background-size: cover;\n}\n\n.example-div-center {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Option                        Shiba Inu      Dog Breed                          The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.        A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally        bred for hunting.                    LIKE      SHARE      '\n    var COMPONENTS = [{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'MainSiteComponent', 'selector': 'app-main-site'},{'name': 'ShowLightsComponent', 'selector': 'app-show-lights'},{'name': 'ShowRoomsComponent', 'selector': 'app-show-rooms'},{'name': 'TestComponent', 'selector': 'app-test'}];\n    var DIRECTIVES = [{'name': 'LoadScriptDirectiveDirective', 'selector': '[appLoadScript]'}];\n    var ACTUAL_COMPONENT = {'name': 'TestComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/counter/counter.component.ts\n            \n            component\n            CounterComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/iobroker.service.ts\n            \n            injectable\n            IobrokerService\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                src/app/iobroker.service.ts\n            \n            variable\n            config\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/iobroker.service.ts\n            \n            variable\n            namespace\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/iobroker.service.ts\n            \n            variable\n            url\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/load-script-directive.directive.ts\n            \n            directive\n            LoadScriptDirectiveDirective\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/main-site/main-site.component.ts\n            \n            component\n            MainSiteComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/selector-service.service.ts\n            \n            injectable\n            SelectorServiceService\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/selector-service.service.ts\n            \n            interface\n            Iselection\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/selector-service.service.ts\n            \n            interface\n            IstateObjectContainer\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/show-lights/show-lights.component.ts\n            \n            component\n            ShowLightsComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/show-rooms/show-rooms.component.ts\n            \n            component\n            ShowRoomsComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/state-store.service.ts\n            \n            injectable\n            StateStoreService\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/test/test.component.ts\n            \n            component\n            TestComponent\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.2.10\n        \n            @angular/cdk : ^8.2.2\n        \n            @angular/common : ~8.2.9\n        \n            @angular/compiler : ~8.2.9\n        \n            @angular/core : ~8.2.9\n        \n            @angular/forms : ~8.2.9\n        \n            @angular/material : ^8.2.2\n        \n            @angular/platform-browser : ~8.2.9\n        \n            @angular/platform-browser-dynamic : ~8.2.9\n        \n            @angular/router : ~8.2.9\n        \n            @clr/angular : ^2.2.2\n        \n            @clr/icons : 2.2.2\n        \n            @clr/ui : ^2.2.2\n        \n            @ngrx/core : ^1.2.0\n        \n            @webcomponents/custom-elements : ^1.0.0\n        \n            hammerjs : ^2.0.8\n        \n            ngx-socket-io : ^3.0.1\n        \n            rxjs : ~6.4.0\n        \n            socket.io : ^2.3.0\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\nioBroker.homeoverview\n\n\n\n\n\nTests:: \nhomeoverview adapter for ioBroker\nHomeOverview Adapter\nSprint 3 Overview\nThis is the Sprint 3 Version. See also: Project\nBacklog\nMVP → Show simple page with all status\nMVP → Show simple page with all status\n\n Error Message Handling\n Create an overview of all the states in ioBroker \n(lights, temp, hum, motion, pressure, wind, power ....)\n\nSprint 3 - Documentation\n\nNode\nongoing ...\n\n\nNode\n...\n\nLicense\nMIT License\nCopyright (c) 2019 Swissglider swissglider@github.com\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 Swissglider swissglider@github.com\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nCounterComponent\n\nCounterComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCounterComponent->AppModule\n\n\n\n\n\nLoadScriptDirectiveDirective\n\nLoadScriptDirectiveDirective\n\nAppModule -->\n\nLoadScriptDirectiveDirective->AppModule\n\n\n\n\n\nMainSiteComponent\n\nMainSiteComponent\n\nAppModule -->\n\nMainSiteComponent->AppModule\n\n\n\n\n\nShowLightsComponent\n\nShowLightsComponent\n\nAppModule -->\n\nShowLightsComponent->AppModule\n\n\n\n\n\nShowRoomsComponent\n\nShowRoomsComponent\n\nAppModule -->\n\nShowRoomsComponent->AppModule\n\n\n\n\n\nTestComponent\n\nTestComponent\n\nAppModule -->\n\nTestComponent->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nIobrokerService\n\nIobrokerService\n\nAppModule -->\n\nIobrokerService->AppModule\n\n\n\n\n\nSelectorServiceService\n\nSelectorServiceService\n\nAppModule -->\n\nSelectorServiceService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TselectionFN   (src/.../selector-service.service.ts)\n                        \n                        \n                            TstateObjectContainerMap   (src/.../selector-service.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/selector-service.service.ts\n    \n    \n        \n            \n                \n                    \n                    TselectionFN\n                \n            \n            \n                \n                    selector Function that selects the needed ioBroker id \n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TstateObjectContainerMap\n                \n            \n            \n                \n                    Map with all all IstateObjectConainers \n\n                \n            \n            \n                \n                            Map\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            config   (src/.../iobroker.service.ts)\n                        \n                        \n                            namespace   (src/.../iobroker.service.ts)\n                        \n                        \n                            url   (src/.../iobroker.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/iobroker.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SocketIoConfig\n\n                        \n                    \n                    \n                        \n                            Default value : { url, options: {\n  query:                          'key=',\n  reconnectionDelay:              10000,\n  reconnectionAttempts:           Infinity,\n  reconnection:                   true,\n  forceNew:                       true,\n  transports:                     ['websocket']\n} }\n                        \n                    \n\n                \n                    \n                        socket.io connection configuration \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'homeOverview.0'\n                        \n                    \n\n                \n                    \n                        ioBroker adapter namespace \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://192.168.90.1:8082'\n                        \n                    \n\n                \n                    \n                        ioBroker url \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
